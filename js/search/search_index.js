var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.135,1,0.726]],["body/components/AboutComponent.html",[0,0.23,1,1.168,2,0.123,3,0.099,4,0.846,5,0.846,6,0.846,7,0.099,8,3.101,9,1.194,10,1.472,11,0.795,12,1.944,13,1.824,14,1.194,15,4.376,16,1.194,17,4.376,18,0.147,19,0.278,20,1.599,21,0.365,22,0.242,23,3.101,24,3.101,25,0.197,26,0.023,27,0.9,28,0.147,29,0.123,30,0.099,31,0.076,32,2.953,33,3.714,34,2.953,35,0.747,36,1.194,37,1.194,38,1.194,39,1.503,40,0.846,41,0.207,42,0.846,43,0.701,44,0.846,45,0.747,46,0.846,47,0.747,48,0.846,49,0.701,50,0.846,51,0.747,52,0.846,53,0.701,54,0.846,55,0.701,56,0.846,57,0.747,58,0.846,59,0.701,60,0.846,61,0.701,62,0.846,63,0.701,64,0.846,65,0.701,66,0.846,67,0.701,68,0.846,69,0.701,70,0.846,71,0.747,72,0.846,73,0.701,74,0.846,75,0.701,76,0.846,77,0.701,78,0.846,79,0.701,80,0.846,81,0.747,82,0.846,83,0.747,84,0.747,85,0.747,86,0.846,87,0.747,88,0.846,89,0.701,90,0.846,91,0.701,92,0.846,93,0.701,94,0.846,95,0.701,96,0.846,97,0.747,98,0.846,99,0.701,100,0.846,101,0.747,102,0.846,103,0.846,104,0.045,105,0.045]],["title/components/AppComponent.html",[0,0.135,43,0.774]],["body/components/AppComponent.html",[0,0.229,1,0.654,2,0.122,3,0.099,4,0.843,5,0.843,6,0.843,7,0.099,11,0.792,12,1.943,13,1.828,14,1.191,16,1.191,18,0.146,22,0.171,26,0.023,28,0.239,29,0.122,30,0.099,31,0.076,32,3.711,35,0.744,36,1.191,37,1.191,38,1.191,39,1.5,40,0.843,41,0.206,42,0.843,43,1.243,44,0.843,45,0.744,46,0.843,47,0.744,48,0.843,49,0.698,50,0.843,51,0.744,52,0.843,53,0.698,54,0.843,55,0.698,56,0.843,57,0.744,58,0.843,59,0.698,60,0.843,61,0.698,62,0.843,63,0.698,64,0.843,65,0.698,66,0.843,67,0.698,68,0.843,69,0.698,70,0.843,71,0.744,72,0.843,73,0.698,74,0.843,75,0.698,76,0.843,77,0.698,78,0.843,79,0.698,80,0.843,81,0.744,82,0.843,83,0.744,84,0.744,85,0.744,86,0.843,87,0.744,88,0.843,89,0.698,90,0.843,91,0.698,92,0.843,93,0.698,94,0.843,95,0.698,96,0.843,97,0.744,98,0.843,99,0.698,100,0.843,101,0.744,102,0.843,103,0.843,104,0.045,105,0.045,106,3.088,107,1.85,108,1.219,109,4.363,110,4.363,111,4.363,112,1.433,113,0.607,114,0.305,115,1.748,116,1.617,117,3.088,118,3.088,119,0.792,120,1.08,121,2.313]],["title/modules/AppModule.html",[122,2.109,123,2.312]],["body/modules/AppModule.html",[0,0.158,1,1.058,2,0.066,3,0.054,7,0.054,26,0.025,28,0.329,29,0.066,30,0.087,31,0.041,35,0.404,43,1.35,45,1.14,47,1.14,49,1.07,51,1.14,53,1.07,55,1.07,57,1.14,59,1.128,61,1.07,63,1.07,65,1.07,67,1.07,69,1.07,71,1.14,73,1.07,75,1.07,77,1.128,79,1.07,81,1.14,83,1.14,84,0.66,85,0.66,87,1.14,89,1.128,91,1.07,93,1.07,95,1.07,97,1.14,99,1.07,101,1.14,104,0.028,105,0.028,107,1.698,108,0.836,119,0.431,122,1.686,123,4.779,124,1.034,125,2.946,126,2.946,127,1.426,128,1.426,129,1.426,130,1.426,131,1.426,132,3.193,133,3.193,134,2.326,135,1.426,136,1.258,137,1.426,138,2.74,139,3.47,140,2.74,141,1.426,142,1.258,143,2.74,144,1.679,145,1.679,146,2.326,147,2.74,148,1.426,149,2.74,150,2.053,151,1.426,152,1.426,153,2.74,154,1.426,155,1.133,156,1.679,157,2.74,158,1.679,159,1.426,160,1.679,161,1.679,162,1.679,163,1.679,164,1.679,165,1.679,166,2.74,167,1.133,168,1.133,169,1.679,170,1.679,171,1.426,172,1.426,173,1.679,174,1.679,175,2.74,176,1.679,177,1.133,178,1.426,179,1.679,180,1.679,181,1.679,182,1.679,183,1.679,184,1.679,185,1.679,186,1.679,187,1.679,188,1.679,189,1.426,190,1.426,191,1.426,192,1.679,193,1.679,194,1.679,195,1.426,196,1.426,197,1.426,198,1.679,199,1.679,200,1.679,201,1.679,202,2.74,203,1.679,204,1.679,205,1.679,206,1.679,207,2.74,208,1.679,209,1.679,210,1.679,211,1.679,212,2.74,213,1.426,214,1.426,215,1.426,216,1.679,217,1.426,218,3.399,219,0.951,220,1.964,221,2.946,222,1.551,223,0.951,224,1.679,225,1.679,226,1.679,227,1.679,228,1.679,229,1.679,230,1.679,231,1.679]],["title/pipes/CapitalizeFirstPipe.html",[132,2.312,232,2.567]],["body/pipes/CapitalizeFirstPipe.html",[2,0.181,3,0.146,7,0.146,9,1.247,11,1.171,19,0.29,22,0.253,25,0.391,26,0.024,28,0.216,29,0.181,30,0.146,31,0.112,41,0.291,104,0.058,105,0.058,113,0.919,114,0.452,116,2.963,132,3.819,232,4.606,233,4.568,234,5.659,235,4.568,236,5.659,237,6.148,238,4.568,239,0.686,240,0.686,241,5.659,242,4.568,243,4.568,244,4.568,245,4.568]],["title/injectables/ChartService.html",[246,0.162,247,2.908]],["body/injectables/ChartService.html",[2,0.139,3,0.112,7,0.112,18,0.257,19,0.304,21,0.391,22,0.336,25,0.386,26,0.025,28,0.226,29,0.139,30,0.112,31,0.086,41,0.226,104,0.049,105,0.049,112,1.57,114,0.575,120,1.232,121,2.639,155,2.377,239,0.717,240,0.717,246,0.257,247,4.057,248,3.522,249,6.272,250,4.938,251,4.938,252,1.013,253,4.78,254,4.78,255,4.78,256,4.78,257,3.522,258,4.557,259,4.78,260,5.818,261,3.522,262,3.522,263,4.605,264,4.057,265,3.522,266,2.99,267,5.425,268,3.225,269,3.522,270,3.522,271,3.522,272,3.522,273,4.605,274,2.503,275,4.78,276,3.522,277,3.522]],["title/injectables/CommitsService.html",[246,0.162,278,2.908]],["body/injectables/CommitsService.html",[2,0.157,3,0.127,7,0.127,18,0.188,19,0.329,21,0.286,22,0.337,25,0.412,26,0.024,28,0.245,29,0.157,30,0.127,31,0.097,41,0.289,104,0.053,105,0.053,108,1.469,113,0.801,114,0.603,119,1.017,220,2.245,239,0.915,240,0.915,246,0.272,252,1.094,278,4.391,279,3.967,280,5.173,281,5.173,282,5.173,283,1.152,284,3.967,285,1.502,286,5.173,287,3.967,288,5.173,289,5.173,290,3.967,291,5.173,292,3.967,293,1.225,294,0.736,295,3.967,296,3.967,297,3.967,298,3.967]],["title/components/ContributionschartComponent.html",[0,0.135,49,0.774]],["body/components/ContributionschartComponent.html",[0,0.222,1,0.604,2,0.113,3,0.091,4,0.778,5,0.778,6,0.778,7,0.091,9,1.124,10,1.405,11,0.731,12,1.931,13,1.812,14,1.124,16,1.124,18,0.135,19,0.262,20,1.539,21,0.348,22,0.311,25,0.262,26,0.024,27,1.196,28,0.135,29,0.113,30,0.091,31,0.07,35,0.686,36,1.124,37,1.124,38,1.124,39,1.447,40,0.778,41,0.195,42,0.778,43,0.644,44,0.778,45,0.686,46,0.778,47,0.686,48,0.778,49,1.198,50,0.778,51,0.686,52,0.778,53,0.644,54,0.778,55,0.644,56,0.778,57,0.686,58,0.778,59,0.644,60,0.778,61,0.644,62,0.778,63,0.644,64,0.778,65,0.644,66,0.778,67,0.644,68,0.778,69,0.644,70,0.778,71,0.686,72,0.778,73,0.644,74,0.778,75,0.644,76,0.778,77,0.644,78,0.778,79,0.644,80,0.778,81,0.686,82,0.778,83,0.686,84,0.686,85,0.686,86,0.778,87,0.686,88,0.778,89,0.644,90,0.778,91,0.644,92,0.778,93,0.644,94,0.778,95,0.644,96,0.778,97,0.686,98,0.778,99,0.644,100,0.778,101,0.686,102,0.778,103,0.778,104,0.042,105,0.042,112,1.353,113,0.782,114,0.407,252,0.781,293,1.494,299,2.849,300,4.119,301,4.119,302,4.119,303,3.972,304,1.124,305,2.405,306,4.119,307,2.849,308,2.849,309,2.849,310,4.119,311,4.119,312,4.119]],["title/injectables/CountsService.html",[246,0.162,313,2.908]],["body/injectables/CountsService.html",[2,0.176,3,0.142,7,0.142,18,0.21,19,0.353,21,0.32,22,0.308,25,0.353,26,0.024,28,0.263,29,0.176,30,0.142,31,0.109,41,0.263,104,0.057,105,0.057,108,1.533,113,0.845,114,0.55,119,1.14,239,0.835,240,0.835,246,0.287,252,0.98,273,3.772,283,1.29,285,1.615,293,1.372,294,0.825,313,4.722,314,4.444,315,5.563,316,4.444,317,5.563,318,4.444,319,4.444,320,3.772,321,4.444]],["title/injectables/DataService.html",[246,0.162,322,2.908]],["body/injectables/DataService.html",[2,0.179,3,0.145,7,0.145,18,0.214,19,0.357,21,0.441,22,0.339,25,0.357,26,0.024,28,0.266,29,0.179,30,0.145,31,0.111,41,0.214,104,0.058,105,0.058,112,1.848,114,0.557,220,2.562,239,0.679,240,0.679,246,0.29,252,0.988,258,4.799,322,4.776,323,4.526,324,5.626,325,5.626,326,5.626,327,4.526,328,4.526,329,4.526,330,4.526]],["title/components/ErrorComponent.html",[0,0.135,53,0.774]],["body/components/ErrorComponent.html",[0,0.216,1,0.565,2,0.105,3,0.085,4,0.727,5,0.727,6,0.727,7,0.085,9,1.07,10,1.351,11,0.683,12,1.921,13,1.802,14,1.07,16,1.07,18,0.126,19,0.249,20,1.491,21,0.335,22,0.303,25,0.296,26,0.023,27,1.351,28,0.186,29,0.105,30,0.085,31,0.065,35,0.642,36,1.07,37,1.07,38,1.07,39,1.401,40,0.727,41,0.186,42,0.727,43,0.602,44,0.727,45,0.642,46,0.727,47,0.642,48,0.727,49,0.602,50,0.727,51,0.642,52,0.727,53,1.161,54,0.727,55,0.602,56,0.727,57,0.642,58,0.727,59,0.602,60,0.727,61,0.602,62,0.727,63,0.602,64,0.727,65,0.602,66,0.727,67,0.602,68,0.727,69,0.602,70,0.727,71,0.642,72,0.727,73,0.602,74,0.727,75,0.602,76,0.727,77,0.602,78,0.727,79,0.602,80,0.727,81,0.642,82,0.727,83,0.642,84,0.642,85,0.642,86,0.727,87,0.642,88,0.727,89,0.602,90,0.727,91,0.602,92,0.727,93,0.602,94,0.727,95,0.602,96,0.727,97,0.642,98,0.727,99,0.602,100,0.727,101,0.642,102,0.727,103,0.727,104,0.04,105,0.04,112,1.289,115,1.508,116,1.395,120,1.796,167,1.798,168,1.798,219,3.24,293,1.768,303,2.939,331,2.664,332,4.359,333,3.923,334,3.923,335,4.359,336,4.359,337,4.359,338,3.923,339,2.664,340,2.664,341,2.664,342,2.647,343,3.488,344,2.261,345,2.261,346,2.261,347,2.647,348,2.939,349,3.329,350,3.329,351,2.939,352,3.329,353,3.923,354,3.329,355,3.923,356,3.329]],["title/components/FooterComponent.html",[0,0.135,55,0.774]],["body/components/FooterComponent.html",[0,0.222,1,0.599,2,0.112,3,0.09,4,0.772,5,0.772,6,0.772,7,0.09,9,1.118,10,1.398,11,0.725,12,1.93,13,1.811,14,1.118,16,1.118,18,0.134,19,0.26,20,1.533,21,0.347,22,0.227,25,0.18,26,0.023,27,0.821,28,0.134,29,0.112,30,0.09,31,0.069,35,0.681,36,1.118,37,1.118,38,1.118,39,1.441,40,0.772,41,0.194,42,0.772,43,0.639,44,0.772,45,0.681,46,0.772,47,0.681,48,0.772,49,0.639,50,0.772,51,0.681,52,0.772,53,0.639,54,0.772,55,1.194,56,0.772,57,0.681,58,0.772,59,0.639,60,0.772,61,0.639,62,0.772,63,0.639,64,0.772,65,0.639,66,0.772,67,0.639,68,0.772,69,0.639,70,0.772,71,0.681,72,0.772,73,0.639,74,0.772,75,0.639,76,0.772,77,0.639,78,0.772,79,0.639,80,0.772,81,0.681,82,0.772,83,0.681,84,0.681,85,0.681,86,0.772,87,0.681,88,0.772,89,0.639,90,0.772,91,0.639,92,0.772,93,0.639,94,0.772,95,0.639,96,0.772,97,0.681,98,0.772,99,0.639,100,0.772,101,0.681,102,0.772,103,0.772,104,0.042,105,0.042,219,2.319,357,2.827,358,4.097,359,4.097,360,4.097,361,2.827,362,2.827,363,3.958,364,4.097,365,5.282,366,5.282,367,4.097,368,4.097,369,4.097,370,4.097,371,3.477,372,4.097,373,4.097,374,4.097,375,4.097,376,3.477,377,4.097,378,4.097,379,3.477,380,3.477,381,4.097,382,4.097,383,3.477]],["title/injectables/ForksService.html",[246,0.162,384,2.908]],["body/injectables/ForksService.html",[2,0.176,3,0.142,7,0.142,18,0.211,19,0.354,21,0.321,22,0.308,25,0.354,26,0.024,28,0.264,29,0.176,30,0.142,31,0.109,41,0.264,104,0.057,105,0.057,108,1.534,113,0.846,114,0.551,119,1.143,239,0.836,240,0.836,246,0.288,252,0.982,283,1.294,285,1.618,293,1.377,294,0.827,304,1.181,384,4.731,385,4.458,386,4.458,387,3.43,388,4.458,389,4.458,390,4.458,391,4.458]],["title/injectables/GithubService.html",[133,2.312,246,0.162]],["body/injectables/GithubService.html",[2,0.162,3,0.131,7,0.131,18,0.193,19,0.335,21,0.294,22,0.323,25,0.392,26,0.024,28,0.292,29,0.162,30,0.131,31,0.1,41,0.276,104,0.054,105,0.054,108,1.486,113,0.91,114,0.578,119,1.048,120,1.429,121,3.063,133,3.56,239,0.876,240,0.876,246,0.276,283,1.187,285,1.531,293,1.629,294,0.759,320,3.47,392,4.088,393,5.275,394,5.275,395,4.088,396,5.275,397,4.088,398,5.275,399,4.088,400,4.088,401,4.088,402,4.088,403,3.56,404,3.56,405,4.088]],["title/components/HowtoComponent.html",[0,0.135,61,0.774]],["body/components/HowtoComponent.html",[0,0.209,1,0.521,2,0.097,3,0.079,4,0.671,5,0.671,6,0.671,7,0.079,9,1.009,10,1.289,11,0.631,12,1.908,13,1.789,14,1.009,16,1.009,18,0.116,19,0.235,20,1.433,21,0.32,22,0.328,25,0.314,26,0.024,27,1.433,28,0.116,29,0.097,30,0.079,31,0.06,34,3.752,35,0.593,36,1.009,37,1.009,38,1.009,39,1.347,40,0.671,41,0.175,42,0.671,43,0.556,44,0.671,45,0.593,46,0.671,47,0.593,48,0.671,49,0.556,50,0.671,51,0.593,52,0.671,53,0.556,54,0.671,55,0.556,56,0.671,57,0.593,58,0.671,59,0.556,60,0.671,61,1.116,62,0.671,63,0.556,64,0.671,65,0.556,66,0.671,67,0.556,68,0.671,69,0.556,70,0.671,71,0.593,72,0.671,73,0.556,74,0.671,75,0.556,76,0.671,77,0.556,78,0.671,79,0.556,80,0.671,81,0.593,82,0.671,83,0.593,84,0.593,85,0.593,86,0.671,87,0.593,88,0.671,89,0.556,90,0.671,91,0.556,92,0.671,93,0.556,94,0.671,95,0.556,96,0.671,97,0.593,98,0.671,99,0.556,100,0.671,101,0.593,102,0.671,103,0.671,104,0.038,105,0.038,112,1.214,113,0.618,114,0.439,115,2.092,116,1.936,124,2.275,220,2.092,222,1.392,223,2.795,342,1.66,343,3.699,348,2.77,406,2.46,407,3.697,408,3.697,409,3.697,410,3.769,411,4.938,412,4.938,413,4.938,414,4.938,415,4.938,416,4.441,417,3.697,418,2.46,419,2.46,420,2.46,421,2.46,422,2.46,423,2.46,424,2.997,425,3.697,426,3.697,427,3.138,428,3.697,429,3.697,430,3.697,431,3.697,432,3.697,433,2.46,434,2.46,435,2.46,436,4.441,437,2.46,438,2.46,439,2.46,440,3.697]],["title/components/IssuesComponent.html",[0,0.135,63,0.774]],["body/components/IssuesComponent.html",[0,0.217,1,0.568,2,0.106,3,0.086,4,0.731,5,0.731,6,0.731,7,0.086,9,1.075,10,1.356,11,0.687,12,1.922,13,1.803,14,1.075,16,1.075,18,0.127,19,0.25,20,1.495,21,0.193,22,0.303,25,0.25,26,0.024,27,1.143,28,0.186,29,0.106,30,0.086,31,0.066,35,0.645,36,1.075,37,1.075,38,1.075,39,1.405,40,0.731,41,0.221,42,0.731,43,0.606,44,0.731,45,0.645,46,0.731,47,0.645,48,0.731,49,0.606,50,0.731,51,0.645,52,0.731,53,0.606,54,0.731,55,0.606,56,0.731,57,0.645,58,0.731,59,0.606,60,0.731,61,0.606,62,0.731,63,1.164,64,0.731,65,0.606,66,0.731,67,0.606,68,0.731,69,0.606,70,0.731,71,0.645,72,0.731,73,0.606,74,0.731,75,0.606,76,0.731,77,0.606,78,0.731,79,0.606,80,0.731,81,0.645,82,0.731,83,0.645,84,0.645,85,0.645,86,0.731,87,0.645,88,0.731,89,0.606,90,0.731,91,0.606,92,0.731,93,0.606,94,0.731,95,0.606,96,0.731,97,0.645,98,0.731,99,0.606,100,0.731,101,0.645,102,0.731,103,0.731,104,0.04,105,0.04,107,1.67,112,1.294,113,0.548,114,0.462,120,1.377,239,0.402,240,0.402,252,0.754,268,2.658,274,1.403,293,1.442,294,0.497,304,1.091,305,2.336,380,3.343,441,2.679,442,4.558,443,5.27,444,3.938,445,3.938,446,5.736,447,2.679,448,3.938,449,2.679,450,2.679,451,2.679,452,3.152,453,2.679,454,3.938,455,1.808,456,2.679]],["title/injectables/IssuesService.html",[246,0.162,442,2.567]],["body/injectables/IssuesService.html",[2,0.176,3,0.142,7,0.142,18,0.211,19,0.354,21,0.321,22,0.308,25,0.354,26,0.024,28,0.264,29,0.176,30,0.142,31,0.109,41,0.264,104,0.057,105,0.057,108,1.534,113,0.846,114,0.551,119,1.143,239,0.836,240,0.836,246,0.288,252,0.982,283,1.294,285,1.618,293,1.377,294,0.827,304,1.181,387,3.43,442,4.176,443,3.784,457,4.458,458,4.458,459,4.458,460,4.458,461,4.458]],["title/components/MentionsComponent.html",[0,0.135,65,0.774]],["body/components/MentionsComponent.html",[0,0.21,1,0.524,2,0.098,3,0.079,4,0.675,5,0.675,6,0.675,7,0.079,9,1.013,10,1.293,11,0.634,12,1.909,13,1.79,14,1.013,16,1.013,18,0.117,19,0.236,20,1.437,21,0.178,22,0.32,25,0.236,26,0.024,27,1.077,28,0.176,29,0.098,30,0.079,31,0.061,35,0.595,36,1.013,37,1.013,38,1.013,39,1.351,40,0.675,41,0.211,42,0.675,43,0.559,44,0.675,45,0.595,46,0.675,47,0.595,48,0.675,49,0.559,50,0.675,51,0.595,52,0.675,53,0.559,54,0.675,55,0.559,56,0.675,57,0.595,58,0.675,59,0.559,60,0.675,61,0.559,62,0.675,63,0.559,64,0.675,65,1.119,66,0.675,67,0.559,68,0.675,69,0.559,70,0.675,71,0.595,72,0.675,73,0.559,74,0.675,75,0.559,76,0.675,77,0.559,78,0.675,79,0.559,80,0.675,81,0.595,82,0.675,83,0.595,84,0.595,85,0.595,86,0.675,87,0.595,88,0.675,89,0.559,90,0.675,91,0.559,92,0.675,93,0.559,94,0.675,95,0.559,96,0.675,97,0.595,98,0.675,99,0.559,100,0.675,101,0.595,102,0.675,103,0.675,104,0.038,105,0.038,107,1.574,112,1.219,113,0.689,114,0.525,239,0.371,240,0.371,252,0.719,274,1.943,293,1.784,294,0.459,304,1.049,305,2.407,452,3.759,462,2.472,463,4.452,464,5.255,465,3.711,466,3.711,467,4.728,468,2.332,469,2.472,470,3.711,471,2.472,472,2.472,473,2.472,474,2.472,475,2.472,476,2.472,477,4.454,478,4.454,479,2.472,480,2.472,481,3.711,482,2.472,483,3.711,484,2.472,485,2.472,486,3.711,487,3.15,488,3.15]],["title/injectables/MentionsService.html",[246,0.162,463,2.567]],["body/injectables/MentionsService.html",[2,0.163,3,0.132,7,0.132,18,0.195,19,0.337,21,0.297,22,0.324,25,0.393,26,0.024,28,0.251,29,0.163,30,0.132,31,0.101,41,0.277,104,0.054,105,0.054,108,1.491,113,0.912,114,0.58,119,1.057,239,0.88,240,0.88,246,0.277,252,1.058,283,1.197,285,1.539,294,0.765,304,1.124,463,3.973,464,3.499,467,3.499,468,2.777,489,4.122,490,5.303,491,4.122,492,3.264,493,4.122,494,5.303,495,4.122,496,4.122,497,4.122,498,4.122,499,4.122]],["title/components/OrganizationsComponent.html",[0,0.135,67,0.774]],["body/components/OrganizationsComponent.html",[0,0.216,1,0.566,2,0.105,3,0.085,4,0.728,5,0.728,6,0.728,7,0.085,9,1.072,10,1.353,11,0.684,12,1.921,13,1.802,14,1.072,16,1.072,18,0.126,19,0.25,20,1.492,21,0.192,22,0.303,25,0.25,26,0.024,27,1.14,28,0.186,29,0.105,30,0.085,31,0.065,35,0.643,36,1.072,37,1.072,38,1.072,39,1.403,40,0.728,41,0.22,42,0.728,43,0.603,44,0.728,45,0.643,46,0.728,47,0.643,48,0.728,49,0.603,50,0.728,51,0.643,52,0.728,53,0.603,54,0.728,55,0.603,56,0.728,57,0.643,58,0.728,59,0.603,60,0.728,61,0.603,62,0.728,63,0.603,64,0.728,65,0.603,66,0.728,67,1.162,68,0.728,69,0.603,70,0.728,71,0.643,72,0.728,73,0.603,74,0.728,75,0.603,76,0.728,77,0.603,78,0.728,79,0.603,80,0.728,81,0.643,82,0.728,83,0.643,84,0.643,85,0.643,86,0.728,87,0.643,88,0.728,89,0.603,90,0.728,91,0.603,92,0.728,93,0.603,94,0.728,95,0.603,96,0.728,97,0.643,98,0.728,99,0.603,100,0.728,101,0.643,102,0.728,103,0.728,104,0.04,105,0.04,107,1.666,112,1.29,113,0.546,114,0.461,120,1.373,239,0.401,240,0.401,252,0.956,274,1.398,293,1.439,294,0.495,304,1.089,305,2.332,376,5.158,452,3.145,455,1.801,500,2.669,501,4.553,502,3.928,503,3.928,504,5.729,505,2.669,506,3.928,507,2.669,508,2.669,509,2.669,510,2.669,511,3.928,512,2.669,513,2.266,514,3.928]],["title/injectables/OrganizationsService.html",[246,0.162,501,2.567]],["body/injectables/OrganizationsService.html",[2,0.176,3,0.142,7,0.142,18,0.211,19,0.354,21,0.321,22,0.308,25,0.354,26,0.024,28,0.264,29,0.176,30,0.142,31,0.109,41,0.264,104,0.057,105,0.057,108,1.534,113,0.846,114,0.551,119,1.143,239,0.836,240,0.836,246,0.288,252,0.982,283,1.294,285,1.618,293,1.377,294,0.827,304,1.181,387,3.43,501,4.176,513,3.784,515,4.458,516,4.458,517,4.458,518,4.458,519,4.458]],["title/components/PreloaderComponent.html",[0,0.135,69,0.774]],["body/components/PreloaderComponent.html",[0,0.23,1,0.663,2,0.124,3,0.1,4,0.853,5,0.853,6,0.853,7,0.1,9,1.201,10,1.479,11,0.802,12,1.945,13,1.825,14,1.201,16,1.201,18,0.148,19,0.28,20,1.605,21,0.367,22,0.243,25,0.199,26,0.023,27,0.908,28,0.148,29,0.124,30,0.1,31,0.077,35,0.753,36,1.201,37,1.201,38,1.201,39,1.509,40,0.853,41,0.208,42,0.853,43,0.707,44,0.853,45,0.753,46,0.853,47,0.753,48,0.853,49,0.707,50,0.853,51,0.753,52,0.853,53,0.707,54,0.853,55,0.707,56,0.853,57,0.753,58,0.853,59,0.707,60,0.853,61,0.707,62,0.853,63,0.707,64,0.853,65,0.707,66,0.853,67,0.707,68,0.853,69,1.25,70,0.853,71,0.753,72,0.853,73,0.707,74,0.853,75,0.707,76,0.853,77,0.707,78,0.853,79,0.707,80,0.853,81,0.753,82,0.853,83,0.753,84,0.753,85,0.753,86,0.853,87,0.753,88,0.853,89,0.707,90,0.853,91,0.707,92,0.853,93,0.707,94,0.853,95,0.707,96,0.853,97,0.753,98,0.853,99,0.707,100,0.853,101,0.753,102,0.853,103,0.853,104,0.045,105,0.045,520,3.127,521,4.402,522,4.402,523,4.402,524,3.127,525,3.127]],["title/classes/Repo.html",[31,0.084,268,2.312]],["body/classes/Repo.html",[2,0.212,3,0.171,7,0.171,26,0.023,30,0.171,31,0.153,104,0.064,105,0.064,268,4.205,526,5.365]],["title/injectables/ReputationService.html",[246,0.162,527,2.908]],["body/injectables/ReputationService.html",[2,0.176,3,0.142,7,0.142,18,0.211,19,0.354,21,0.321,22,0.308,25,0.354,26,0.024,28,0.264,29,0.176,30,0.142,31,0.109,41,0.264,104,0.057,105,0.057,108,1.534,113,0.846,114,0.551,119,1.143,239,0.836,240,0.836,246,0.288,252,0.982,283,1.294,285,1.618,294,0.827,304,1.181,468,2.334,492,3.43,527,4.731,528,4.458,529,4.458,530,4.458,531,4.458,532,4.458,533,4.458]],["title/components/SearchComponent.html",[0,0.135,73,0.774]],["body/components/SearchComponent.html",[0,0.224,1,0.617,2,0.115,3,0.093,4,0.794,5,0.794,6,0.794,7,0.093,9,1.142,10,1.422,11,0.746,12,1.934,13,1.815,14,1.142,16,1.142,18,0.138,19,0.266,20,1.554,21,0.353,22,0.231,25,0.185,26,0.023,27,0.845,28,0.138,29,0.115,30,0.093,31,0.071,32,2.823,33,3.551,34,2.823,35,0.701,36,1.142,37,1.142,38,1.142,39,1.461,40,0.794,41,0.198,42,0.794,43,0.658,44,0.794,45,0.701,46,0.794,47,0.701,48,0.794,49,0.658,50,0.794,51,0.701,52,0.794,53,0.658,54,0.794,55,0.658,56,0.794,57,0.701,58,0.794,59,0.658,60,0.794,61,0.658,62,0.794,63,0.658,64,0.794,65,0.658,66,0.794,67,0.658,68,0.794,69,0.658,70,0.794,71,0.701,72,0.794,73,1.21,74,0.794,75,0.658,76,0.794,77,0.658,78,0.794,79,0.658,80,0.794,81,0.701,82,0.794,83,0.701,84,0.701,85,1.18,86,0.794,87,0.701,88,0.794,89,0.658,90,0.794,91,0.658,92,0.794,93,0.658,94,0.794,95,0.658,96,0.794,97,0.701,98,0.794,99,0.658,100,0.794,101,0.701,102,0.794,103,0.794,219,3.03,347,2.823,351,3.135,363,3.135,427,3.551,534,2.911,535,4.184,536,4.184,537,2.911,538,2.911,539,4.184,540,4.184,541,4.184,542,4.184,543,4.184,544,4.184,545,4.184,546,4.184,547,5.354,548,2.911,549,2.911,550,2.911,551,2.911]],["title/components/StackerrorComponent.html",[0,0.135,75,0.774]],["body/components/StackerrorComponent.html",[0,0.216,1,0.56,2,0.104,3,0.084,4,0.721,5,0.721,6,0.721,7,0.084,9,1.063,10,1.344,11,0.677,12,1.919,13,1.801,14,1.063,16,1.063,18,0.125,19,0.248,20,1.484,21,0.333,22,0.302,25,0.294,26,0.023,27,1.344,28,0.184,29,0.104,30,0.084,31,0.065,35,0.636,36,1.063,37,1.063,38,1.063,39,1.395,40,0.721,41,0.184,42,0.721,43,0.597,44,0.721,45,0.636,46,0.721,47,0.636,48,0.721,49,0.597,50,0.721,51,0.636,52,0.721,53,0.597,54,0.721,55,0.597,56,0.721,57,0.636,58,0.721,59,0.597,60,0.721,61,0.597,62,0.721,63,0.597,64,0.721,65,0.597,66,0.721,67,0.597,68,0.721,69,0.597,70,0.721,71,0.636,72,0.721,73,0.597,74,0.721,75,1.156,76,0.721,77,0.597,78,0.721,79,0.597,80,0.721,81,0.636,82,0.721,83,0.636,84,0.636,85,0.636,86,0.721,87,0.636,88,0.721,89,0.597,90,0.721,91,0.597,92,0.721,93,0.597,94,0.721,95,0.597,96,0.721,97,0.636,98,0.721,99,0.597,100,0.721,101,0.636,102,0.721,103,0.721,104,0.04,105,0.04,112,1.28,115,1.494,116,1.383,120,2.119,167,1.782,168,1.782,303,2.919,332,3.308,335,4.34,336,4.34,337,4.34,342,2.63,343,3.47,344,2.241,345,2.241,346,2.241,347,2.63,348,2.919,349,3.308,350,3.308,351,2.919,352,3.308,354,3.308,356,3.308,383,3.308,468,2.677,552,2.64,553,3.897,554,3.897,555,3.897,556,3.897,557,2.64,558,2.64,559,2.64,560,5.113,561,2.64,562,3.308,563,3.897,564,3.897,565,2.64]],["title/components/StarcountComponent.html",[0,0.135,79,0.774]],["body/components/StarcountComponent.html",[0,0.197,1,0.458,2,0.085,3,0.069,4,0.59,5,0.59,6,0.59,7,0.069,9,0.914,10,1.19,11,0.554,12,1.885,13,1.767,14,0.914,16,0.914,18,0.102,19,0.213,20,1.34,21,0.156,22,0.323,25,0.213,26,0.024,27,0.972,28,0.158,29,0.085,30,0.069,31,0.053,32,2.26,34,2.26,35,0.987,36,0.914,37,0.914,38,0.914,39,1.26,40,0.59,41,0.194,42,0.59,43,0.489,44,0.59,45,0.521,46,0.59,47,0.521,48,0.59,49,0.489,50,0.59,51,0.521,52,0.59,53,0.489,54,0.59,55,0.489,56,0.59,57,0.521,58,0.59,59,0.489,60,0.59,61,0.489,62,0.59,63,0.489,64,0.59,65,0.489,66,0.59,67,0.489,68,0.59,69,0.489,70,0.59,71,0.521,72,0.59,73,0.489,74,0.59,75,0.489,76,0.59,77,0.489,78,0.59,79,1.044,80,0.59,81,0.521,82,0.59,83,0.521,84,0.521,85,0.521,86,0.59,87,0.521,88,0.59,89,0.489,90,0.59,91,0.489,92,0.59,93,0.489,94,0.59,95,0.489,96,0.59,97,0.521,98,0.59,99,0.489,100,0.59,101,0.521,102,0.59,103,0.59,104,0.034,105,0.034,107,1.42,112,1.1,113,0.466,114,0.545,115,1.223,116,1.132,155,3.116,177,3.566,178,1.834,220,2.32,222,3.224,223,1.223,239,0.324,240,0.324,250,3.919,251,3.919,252,0.662,263,3.48,264,3.48,266,4.241,274,1.132,293,1.266,294,0.401,304,0.979,305,2.095,410,3.48,424,2.767,455,1.458,566,2.161,567,3.349,568,3.349,569,3.349,570,4.617,571,4.617,572,2.161,573,2.161,574,3.919,575,2.161,576,2.161,577,2.161,578,2.161,579,2.161,580,2.161,581,2.842,582,3.349,583,3.349,584,3.349,585,3.349,586,3.349,587,3.349,588,2.842,589,3.349,590,3.349,591,3.349,592,3.349,593,3.349,594,3.349,595,2.161,596,2.161,597,2.161,598,4.1,599,2.161,600,4.1,601,4.1,602,3.349,603,2.161,604,2.161]],["title/injectables/StarsService.html",[177,2.312,246,0.162]],["body/injectables/StarsService.html",[2,0.176,3,0.142,7,0.142,18,0.211,19,0.354,21,0.321,22,0.308,25,0.354,26,0.024,28,0.264,29,0.176,30,0.142,31,0.109,41,0.264,104,0.057,105,0.057,108,1.534,113,0.846,114,0.551,119,1.143,177,3.761,239,0.836,240,0.836,246,0.288,252,0.982,283,1.294,285,1.618,293,1.377,294,0.827,304,1.181,387,3.43,574,3.784,605,4.458,606,4.458,607,4.458,608,4.458,609,4.458]],["title/injectables/TagsService.html",[246,0.162,610,2.908]],["body/injectables/TagsService.html",[2,0.176,3,0.142,7,0.142,18,0.211,19,0.354,21,0.321,22,0.308,25,0.354,26,0.024,28,0.264,29,0.176,30,0.142,31,0.109,41,0.264,104,0.057,105,0.057,108,1.534,113,0.846,114,0.551,119,1.143,239,0.836,240,0.836,246,0.288,252,0.982,283,1.294,285,1.618,294,0.827,304,1.181,468,2.334,492,3.43,610,4.731,611,4.458,612,4.458,613,4.458,614,4.458,615,4.458,616,4.458]],["title/injectables/ToptagsService.html",[246,0.162,617,2.908]],["body/injectables/ToptagsService.html",[2,0.174,3,0.14,7,0.14,18,0.208,19,0.351,21,0.316,22,0.305,25,0.351,26,0.024,28,0.261,29,0.174,30,0.14,31,0.108,41,0.261,104,0.057,105,0.057,108,1.526,113,0.84,114,0.546,119,1.126,146,3.728,239,0.829,240,0.829,246,0.286,252,0.975,258,3.29,283,1.275,285,1.603,294,0.815,304,1.17,468,2.3,492,3.398,617,4.686,618,4.391,619,4.391,620,4.391,621,3.728,622,4.391,623,4.391,624,4.391,625,4.391]],["title/injectables/TwitterService.html",[246,0.162,626,2.908]],["body/injectables/TwitterService.html",[2,0.174,3,0.141,7,0.141,18,0.208,19,0.351,21,0.317,22,0.306,25,0.351,26,0.024,28,0.286,29,0.174,30,0.141,31,0.108,41,0.262,104,0.057,105,0.057,108,1.528,113,0.841,114,0.547,119,1.129,120,1.54,239,0.83,240,0.83,246,0.286,252,0.976,283,1.279,285,1.606,294,0.818,304,1.172,403,2.972,404,2.972,626,4.695,627,4.405,628,4.405,629,4.144,630,4.405,631,2.711,632,2.972,633,3.739,634,4.405]],["title/components/TwitterdashboardComponent.html",[0,0.135,91,0.774]],["body/components/TwitterdashboardComponent.html",[0,0.224,1,0.613,2,0.114,3,0.092,4,0.79,5,0.79,6,0.79,7,0.092,9,1.137,10,1.417,11,0.742,12,1.934,13,1.814,14,1.137,16,1.137,18,0.137,19,0.265,20,1.55,21,0.351,22,0.27,25,0.184,26,0.023,27,0.84,28,0.197,29,0.114,30,0.092,31,0.071,35,0.697,36,1.137,37,1.137,38,1.137,39,1.457,40,0.79,41,0.197,42,0.79,43,0.654,44,0.79,45,0.697,46,0.79,47,0.697,48,0.79,49,0.654,50,0.79,51,0.697,52,0.79,53,0.654,54,0.79,55,0.654,56,0.79,57,0.697,58,0.79,59,0.654,60,0.79,61,0.654,62,0.79,63,0.654,64,0.79,65,0.654,66,0.79,67,0.654,68,0.79,69,0.654,70,0.79,71,0.697,72,0.79,73,0.654,74,0.79,75,0.654,76,0.79,77,0.654,78,0.79,79,0.654,80,0.79,81,0.697,82,0.79,83,0.697,84,0.697,85,0.697,86,0.79,87,0.697,88,0.79,89,0.654,90,0.79,91,1.207,92,0.79,93,0.654,94,0.79,95,0.654,96,0.79,97,0.697,98,0.79,99,0.654,100,0.79,101,0.697,102,0.79,103,0.79,104,0.043,105,0.043,114,0.286,120,1.867,274,3.086,305,2.422,487,3.536,632,3.294,635,2.894,636,4.166,637,4.166,638,4.166,639,4.166,640,2.894,641,2.456,642,3.121,643,4.166,644,4.166,645,4.166,646,4.166,647,4.166,648,3.536,649,4.166]],["title/components/TwitterfollowersComponent.html",[0,0.135,93,0.774]],["body/components/TwitterfollowersComponent.html",[0,0.211,1,0.533,2,0.099,3,0.08,4,0.686,5,0.686,6,0.686,7,0.08,9,1.025,10,1.306,11,0.645,12,1.912,13,1.793,14,1.025,16,1.025,18,0.119,19,0.239,20,1.449,21,0.181,22,0.321,25,0.239,26,0.024,27,1.091,28,0.213,29,0.099,30,0.08,31,0.062,35,0.606,36,1.025,37,1.025,38,1.025,39,1.362,40,0.686,41,0.213,42,0.686,43,0.568,44,0.686,45,0.606,46,0.686,47,0.606,48,0.686,49,0.568,50,0.686,51,0.606,52,0.686,53,0.568,54,0.686,55,0.568,56,0.686,57,0.606,58,0.686,59,0.568,60,0.686,61,0.568,62,0.686,63,0.568,64,0.686,65,0.568,66,0.686,67,0.568,68,0.686,69,0.568,70,0.686,71,0.606,72,0.686,73,0.568,74,0.686,75,0.568,76,0.686,77,0.568,78,0.686,79,0.568,80,0.686,81,0.606,82,0.686,83,0.606,84,0.606,85,0.606,86,0.686,87,0.606,88,0.686,89,0.568,90,0.686,91,0.568,92,0.686,93,1.128,94,0.686,95,0.568,96,0.686,97,0.606,98,0.686,99,0.568,100,0.686,101,0.606,102,0.686,103,0.686,104,0.039,105,0.039,107,1.594,112,1.235,113,0.743,114,0.528,120,0.879,222,2.127,223,2.127,239,0.377,240,0.377,252,0.726,294,0.467,304,1.058,305,2.265,424,3.036,631,2.769,632,1.697,641,2.134,642,3.74,648,3.19,650,2.515,651,4.2,652,3.758,653,3.758,654,3.758,655,4.992,656,4.992,657,2.515,658,3.758,659,3.758,660,2.515,661,2.515,662,2.515,663,2.515,664,2.515,665,2.515,666,2.134,667,2.134,668,4.992,669,2.515,670,3.758,671,3.19,672,3.19,673,2.515,674,2.515,675,3.19,676,3.19]],["title/injectables/TwitterfollowersService.html",[246,0.162,651,2.567]],["body/injectables/TwitterfollowersService.html",[2,0.174,3,0.141,7,0.141,18,0.208,19,0.351,21,0.317,22,0.306,25,0.351,26,0.024,28,0.286,29,0.174,30,0.141,31,0.108,41,0.262,104,0.057,105,0.057,108,1.528,113,0.841,114,0.547,119,1.129,120,1.54,239,0.83,240,0.83,246,0.286,252,0.976,283,1.279,285,1.606,294,0.818,304,1.172,403,2.972,404,2.972,629,4.144,631,2.711,632,2.972,633,3.739,651,4.144,677,4.405,678,4.405,679,4.405,680,4.405]],["title/injectables/TwitterrealService.html",[246,0.162,681,2.567]],["body/injectables/TwitterrealService.html",[2,0.176,3,0.142,7,0.142,18,0.211,19,0.354,21,0.321,22,0.308,25,0.354,26,0.024,28,0.264,29,0.176,30,0.142,31,0.109,41,0.264,104,0.057,105,0.057,108,1.534,113,0.846,114,0.551,119,1.143,239,0.836,240,0.836,246,0.288,252,0.982,283,1.294,285,1.618,294,0.827,304,1.181,403,3.008,404,3.008,629,4.176,631,2.744,681,4.176,682,4.458,683,4.458,684,4.458,685,4.458]],["title/components/TwitterrealfollowersComponent.html",[0,0.135,95,0.774]],["body/components/TwitterrealfollowersComponent.html",[0,0.213,1,0.545,2,0.102,3,0.082,4,0.702,5,0.702,6,0.702,7,0.082,9,1.043,10,1.324,11,0.659,12,1.915,13,1.797,14,1.043,16,1.043,18,0.122,19,0.243,20,1.465,21,0.185,22,0.313,25,0.243,26,0.024,27,1.109,28,0.181,29,0.102,30,0.082,31,0.063,35,0.619,36,1.043,37,1.043,38,1.043,39,1.377,40,0.702,41,0.216,42,0.702,43,0.581,44,0.702,45,0.619,46,0.702,47,0.619,48,0.702,49,0.581,50,0.702,51,0.619,52,0.702,53,0.581,54,0.702,55,0.581,56,0.702,57,0.619,58,0.702,59,0.581,60,0.702,61,0.581,62,0.702,63,0.581,64,0.702,65,0.581,66,0.702,67,0.581,68,0.702,69,0.581,70,0.702,71,0.619,72,0.702,73,0.581,74,0.702,75,0.581,76,0.702,77,0.581,78,0.702,79,0.581,80,0.702,81,0.619,82,0.702,83,0.619,84,0.619,85,0.619,86,0.702,87,0.619,88,0.702,89,0.581,90,0.702,91,0.581,92,0.702,93,0.581,94,0.702,95,1.141,96,0.702,97,0.619,98,0.702,99,0.581,100,0.702,101,0.619,102,0.702,103,0.702,104,0.039,105,0.039,107,1.62,112,1.255,113,0.532,114,0.499,222,2.163,223,2.163,239,0.386,240,0.386,252,0.736,294,0.477,304,1.07,305,2.29,424,3.077,631,2.806,642,4.235,666,2.183,667,2.183,671,3.243,672,3.243,675,3.243,676,3.243,681,4.235,686,2.571,687,3.821,688,3.821,689,3.821,690,5.047,691,2.571,692,3.821,693,3.821,694,2.571,695,2.571,696,2.571,697,2.571,698,2.571,699,5.047,700,2.571,701,2.571,702,2.571,703,2.571,704,2.571]],["title/injectables/UserService.html",[246,0.162,705,2.908]],["body/injectables/UserService.html",[2,0.162,3,0.131,7,0.131,18,0.193,19,0.335,21,0.294,22,0.323,25,0.392,26,0.024,28,0.276,29,0.162,30,0.131,31,0.1,41,0.276,104,0.054,105,0.054,108,1.486,113,0.91,114,0.578,119,1.048,120,1.429,239,0.876,240,0.876,246,0.276,252,1.056,283,1.187,285,1.531,294,0.759,304,1.118,468,2.762,488,3.47,492,3.246,705,4.477,706,4.088,707,5.275,708,4.088,709,4.088,710,5.275,711,4.088,712,4.088,713,4.088,714,4.088,715,4.088,716,4.088,717,4.088]],["title/components/WatchersComponent.html",[0,0.135,99,0.774]],["body/components/WatchersComponent.html",[0,0.217,1,0.572,2,0.107,3,0.086,4,0.736,5,0.736,6,0.736,7,0.086,9,1.08,10,1.361,11,0.692,12,1.923,13,1.804,14,1.08,16,1.08,18,0.128,19,0.252,20,1.5,21,0.194,22,0.304,25,0.252,26,0.024,27,1.149,28,0.187,29,0.107,30,0.086,31,0.066,35,0.65,36,1.08,37,1.08,38,1.08,39,1.41,40,0.736,41,0.222,42,0.736,43,0.61,44,0.736,45,0.65,46,0.736,47,0.65,48,0.736,49,0.61,50,0.736,51,0.65,52,0.736,53,0.61,54,0.736,55,0.61,56,0.736,57,0.65,58,0.736,59,0.61,60,0.736,61,0.61,62,0.736,63,0.61,64,0.736,65,0.61,66,0.736,67,0.61,68,0.736,69,0.61,70,0.736,71,0.65,72,0.736,73,0.61,74,0.736,75,0.61,76,0.736,77,0.61,78,0.736,79,0.61,80,0.736,81,0.65,82,0.736,83,0.65,84,0.65,85,0.65,86,0.736,87,0.65,88,0.736,89,0.61,90,0.736,91,0.61,92,0.736,93,0.61,94,0.736,95,0.61,96,0.736,97,0.65,98,0.736,99,1.168,100,0.736,101,0.65,102,0.736,103,0.736,104,0.041,105,0.041,107,1.679,112,1.301,113,0.551,114,0.464,120,1.385,239,0.405,240,0.405,252,0.757,274,1.413,293,1.448,294,0.501,304,1.095,305,2.344,452,3.165,455,1.821,718,2.698,719,4.309,720,5.649,721,3.959,722,3.959,723,2.698,724,3.959,725,3.959,726,2.698,727,2.698,728,2.698,729,2.698,730,3.959,731,2.698]],["title/injectables/WatchersService.html",[246,0.162,719,2.567]],["body/injectables/WatchersService.html",[2,0.176,3,0.142,7,0.142,18,0.211,19,0.354,21,0.321,22,0.308,25,0.354,26,0.024,28,0.264,29,0.176,30,0.142,31,0.109,41,0.264,104,0.057,105,0.057,108,1.534,113,0.846,114,0.551,119,1.143,239,0.836,240,0.836,246,0.288,252,0.982,283,1.294,285,1.618,293,1.377,294,0.827,304,1.181,387,3.43,719,4.176,720,3.784,732,4.458,733,4.458,734,4.458,735,4.458,736,4.458]],["title/dependencies.html",[124,2.538,737,2.854]],["body/dependencies.html",[26,0.024,29,0.159,84,0.971,104,0.054,105,0.054,124,2.481,141,4.438,142,3.917,148,3.422,150,3.917,151,3.422,152,3.422,154,3.422,155,2.721,159,3.422,167,3.528,168,3.915,171,3.422,172,3.422,189,3.422,190,3.422,195,3.422,196,3.422,197,3.422,213,3.422,214,3.422,215,3.422,219,2.282,738,4.032,739,6.796,740,4.032,741,4.032,742,4.032,743,4.032,744,4.032,745,4.032,746,4.032,747,4.032,748,4.032,749,4.032,750,4.032,751,4.032,752,4.032,753,4.032,754,4.032,755,4.032,756,4.032,757,4.032,758,4.032,759,4.032,760,4.032,761,4.032,762,4.032,763,4.032,764,4.032,765,4.032,766,4.032,767,4.032,768,4.032,769,4.032,770,4.032,771,4.032,772,4.032,773,4.032]],["title/index.html",[18,0.135,371,2.422,774,2.854]],["body/index.html",[0,0.232,3,0.132,7,0.132,13,1.063,26,0.018,41,0.196,104,0.055,105,0.055,136,3.106,150,4.404,342,2.797,347,3.967,363,3.106,379,4.517,562,4.517,621,5.265,775,4.145,776,6.203,777,5.879,778,4.145,779,4.145,780,5.322,781,6.677,782,6.677,783,4.145,784,4.145,785,4.145,786,4.145,787,4.145,788,4.145,789,4.145,790,4.145,791,4.145,792,5.879,793,4.145,794,6.415,795,4.145,796,4.145,797,4.145,798,4.145,799,4.145,800,4.145,801,3.518,802,5.322,803,6.415,804,5.322,805,4.145,806,4.145,807,4.145,808,4.145,809,4.145,810,4.145,811,4.145,812,4.145]],["title/modules.html",[122,2.887]],["body/modules.html",[26,0.021,104,0.065,105,0.065,122,3.363,123,3.687,142,4.094,813,5.464,814,5.464,815,5.464]],["title/overview.html",[816,3.981]],["body/overview.html",[0,0.117,1,1.05,26,0.024,30,0.095,31,0.073,35,0.715,43,1.44,45,1.193,47,1.193,49,1.119,51,1.193,53,1.119,55,1.119,57,1.193,59,1.119,61,1.119,63,1.119,65,1.119,67,1.119,69,1.119,71,1.193,73,1.119,75,1.119,77,1.119,79,1.119,81,1.193,83,1.193,87,1.193,89,1.119,91,1.119,93,1.119,95,1.119,97,1.193,99,1.119,101,1.193,104,0.044,105,0.044,107,1.259,108,1.193,122,2.612,123,4.906,124,1.828,125,2.521,126,2.521,127,2.521,128,2.521,129,2.521,130,2.521,131,2.521,132,3.342,133,3.342,134,3.602,135,2.521,136,2.225,232,2.225,246,0.14,588,2.521,816,2.521,817,4.244,818,2.97,819,2.97]],["title/miscellaneous/variables.html",[820,2.422,821,3.501]],["body/miscellaneous/variables.html",[0,0.248,1,0.907,18,0.202,26,0.024,59,0.967,77,0.967,85,1.03,89,0.967,104,0.056,105,0.056,114,0.59,115,3.377,116,3.124,137,3.63,191,5.618,217,5.064,218,5.327,219,2.421,220,3.377,221,5.064,222,3.377,223,3.073,581,5.327,801,4.609,820,3.63,821,3.63,822,4.277,823,4.277,824,4.277,825,4.277,826,4.277]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/CapitalizeFirstPipe.html":{},"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"components/ContributionschartComponent.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"components/PreloaderComponent.html":{},"classes/Repo.html":{},"injectables/ReputationService.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":274,"title":{},"body":{"injectables/ChartService.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/WatchersComponent.html":{}}}],["0.1.0",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["0.100.2",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["0.8.14",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":817,"title":{},"body":{"overview.html":{}}}],["1.0.3",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["1.0.4",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["1.0.7",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":779,"title":{},"body":{"index.html":{}}}],["1.6.0",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["15.1.10",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":818,"title":{},"body":{"overview.html":{}}}],["2.0.8",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["2.2.4",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["2.7.1",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":703,"title":{},"body":{"components/TwitterrealfollowersComponent.html":{}}}],["3.1.1",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":588,"title":{},"body":{"components/StarcountComponent.html":{},"overview.html":{}}}],["4.13.0",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":819,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["5.2.4",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["5.5.2",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["7870026",{"_index":564,"title":{},"body":{"components/StackerrorComponent.html":{}}}],["9",{"_index":592,"title":{},"body":{"components/StarcountComponent.html":{}}}],["_get",{"_index":304,"title":{},"body":{"components/ContributionschartComponent.html":{},"injectables/ForksService.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"injectables/ReputationService.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{}}}],["_get(handl",{"_index":629,"title":{},"body":{"injectables/TwitterService.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{}}}],["_get(id",{"_index":492,"title":{},"body":{"injectables/MentionsService.html":{},"injectables/ReputationService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/UserService.html":{}}}],["_get(usernam",{"_index":387,"title":{},"body":{"injectables/ForksService.html":{},"injectables/IssuesService.html":{},"injectables/OrganizationsService.html":{},"injectables/StarsService.html":{},"injectables/WatchersService.html":{}}}],["_getfavorit",{"_index":490,"title":{},"body":{"injectables/MentionsService.html":{}}}],["_getfavorites(id",{"_index":494,"title":{},"body":{"injectables/MentionsService.html":{}}}],["_getquest",{"_index":707,"title":{},"body":{"injectables/UserService.html":{}}}],["_getquestions(id",{"_index":710,"title":{},"body":{"injectables/UserService.html":{}}}],["about'},{'nam",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["about.component.css",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.html",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcompon",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["actual_compon",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["agwordcloudmodul",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["agwordcloudmodule.forroot",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["analyz",{"_index":540,"title":{},"body":{"components/SearchComponent.html":{}}}],["angular",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CommitsService.html":{},"injectables/CountsService.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"injectables/IssuesService.html":{},"injectables/MentionsService.html":{},"injectables/OrganizationsService.html":{},"injectables/ReputationService.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"injectables/UserService.html":{},"injectables/WatchersService.html":{}}}],["angular/compil",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/CapitalizeFirstPipe.html":{},"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"components/ContributionschartComponent.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"components/PreloaderComponent.html":{},"injectables/ReputationService.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router/test",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/servic",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular2",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"components/ErrorComponent.html":{},"components/StackerrorComponent.html":{},"dependencies.html":{}}}],["angular4",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"index.html":{}}}],["app.compon",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":43,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["appmodul",{"_index":123,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["arg",{"_index":237,"title":{},"body":{"pipes/CapitalizeFirstPipe.html":{}}}],["array",{"_index":258,"title":{},"body":{"injectables/ChartService.html":{},"injectables/DataService.html":{},"injectables/ToptagsService.html":{}}}],["artifact",{"_index":795,"title":{},"body":{"index.html":{}}}],["assign",{"_index":243,"title":{},"body":{"pipes/CapitalizeFirstPipe.html":{}}}],["async",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["asynclocalstoragemodul",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["autofocu",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["autofocusmodul",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["automat",{"_index":787,"title":{},"body":{"index.html":{}}}],["badg",{"_index":623,"title":{},"body":{"injectables/ToptagsService.html":{}}}],["behaviorsubject",{"_index":328,"title":{},"body":{"injectables/DataService.html":{}}}],["black",{"_index":590,"title":{},"body":{"components/StarcountComponent.html":{}}}],["boolean",{"_index":424,"title":{},"body":{"components/HowtoComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{}}}],["bootstrap",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["brows",{"_index":815,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":794,"title":{},"body":{"index.html":{}}}],["bunch",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{},"components/SearchComponent.html":{}}}],["calendar",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["call",{"_index":393,"title":{},"body":{"injectables/GithubService.html":{}}}],["call(usernam",{"_index":396,"title":{},"body":{"injectables/GithubService.html":{}}}],["callrepo",{"_index":394,"title":{},"body":{"injectables/GithubService.html":{}}}],["callrepo(usernam",{"_index":398,"title":{},"body":{"injectables/GithubService.html":{}}}],["capitalizefirst",{"_index":234,"title":{},"body":{"pipes/CapitalizeFirstPipe.html":{}}}],["capitalizefirstpip",{"_index":132,"title":{"pipes/CapitalizeFirstPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/CapitalizeFirstPipe.html":{},"overview.html":{}}}],["chang",{"_index":789,"title":{},"body":{"index.html":{}}}],["chart",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChartService.html":{},"components/StarcountComponent.html":{},"dependencies.html":{}}}],["chart'},{'nam",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["chart.j",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["chartcompon",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["chartdata",{"_index":250,"title":{},"body":{"injectables/ChartService.html":{},"components/StarcountComponent.html":{}}}],["chartdetail",{"_index":288,"title":{},"body":{"injectables/CommitsService.html":{}}}],["chartlabel",{"_index":251,"title":{},"body":{"injectables/ChartService.html":{},"components/StarcountComponent.html":{}}}],["chartopt",{"_index":570,"title":{},"body":{"components/StarcountComponent.html":{}}}],["chartservic",{"_index":247,"title":{"injectables/ChartService.html":{}},"body":{"injectables/ChartService.html":{}}}],["chartsmodul",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["check",{"_index":811,"title":{},"body":{"index.html":{}}}],["class",{"_index":31,"title":{"classes/Repo.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/CapitalizeFirstPipe.html":{},"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"components/ContributionschartComponent.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"components/PreloaderComponent.html":{},"classes/Repo.html":{},"injectables/ReputationService.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{},"overview.html":{}}}],["cli",{"_index":777,"title":{},"body":{"index.html":{}}}],["client",{"_index":775,"title":{},"body":{"index.html":{}}}],["closemod",{"_index":336,"title":{},"body":{"components/ErrorComponent.html":{},"components/StackerrorComponent.html":{}}}],["closetaptarget",{"_index":412,"title":{},"body":{"components/HowtoComponent.html":{}}}],["cloud",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["cluster_appmodul",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_appcomponent_provid",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":790,"title":{},"body":{"index.html":{}}}],["commits'},{'nam",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["commitscompon",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["commitsservic",{"_index":278,"title":{"injectables/CommitsService.html":{}},"body":{"injectables/CommitsService.html":{}}}],["compon",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["component_templ",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["components/footer/footer.compon",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["components/github/about/about.compon",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["components/github/chart/chart.compon",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["components/github/commits/commits.compon",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["components/github/contributionschart/contributionschart.compon",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["components/github/error/error.compon",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["components/github/forks/forks.compon",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["components/github/github.compon",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["components/github/howto/howto.compon",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["components/github/issues/issues.compon",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["components/github/organizations/organizations.compon",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["components/github/starcount/starcount.compon",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["components/github/watchers/watchers.compon",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["components/models/stackus",{"_index":713,"title":{},"body":{"injectables/UserService.html":{}}}],["components/models/twitt",{"_index":633,"title":{},"body":{"injectables/TwitterService.html":{},"injectables/TwitterfollowersService.html":{}}}],["components/models/us",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"injectables/GithubService.html":{}}}],["components/preloader/preloader.compon",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["components/search/search.compon",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["components/stackoverflow/dashboard/dashboard.compon",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["components/stackoverflow/mentions/mentions.compon",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["components/stackoverflow/reputation/reputation.compon",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["components/stackoverflow/stackerror/stackerror.compon",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["components/stackoverflow/stackoverflow.compon",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["components/stackoverflow/tags/tags.compon",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["components/stackoverflow/toptags/toptags.compon",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["components/stackoverflow/wordcloud/wordcloud.compon",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["components/twitter/temp/temp.compon",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["components/twitter/twitter.compon",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["components/twitter/twitterdashboard/twitterdashboard.compon",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["components/twitter/twitterfollowers/twitterfollowers.compon",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["components/twitter/twitterrealfollowers/twitterrealfollowers.compon",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["components/twitter/twittertimeline/twittertimeline.compon",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":432,"title":{},"body":{"components/HowtoComponent.html":{}}}],["console.log(follow",{"_index":670,"title":{},"body":{"components/TwitterfollowersComponent.html":{}}}],["console.log(followers.us",{"_index":702,"title":{},"body":{"components/TwitterrealfollowersComponent.html":{}}}],["console.log(mentions.tot",{"_index":480,"title":{},"body":{"components/MentionsComponent.html":{}}}],["console.log(this.handl",{"_index":673,"title":{},"body":{"components/TwitterfollowersComponent.html":{}}}],["const",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["constructor",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"components/ContributionschartComponent.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"components/PreloaderComponent.html":{},"injectables/ReputationService.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{}}}],["constructor(followersservic",{"_index":657,"title":{},"body":{"components/TwitterfollowersComponent.html":{}}}],["constructor(http",{"_index":283,"title":{},"body":{"injectables/CommitsService.html":{},"injectables/CountsService.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"injectables/IssuesService.html":{},"injectables/MentionsService.html":{},"injectables/OrganizationsService.html":{},"injectables/ReputationService.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"injectables/UserService.html":{},"injectables/WatchersService.html":{}}}],["constructor(issuesservic",{"_index":447,"title":{},"body":{"components/IssuesComponent.html":{}}}],["constructor(mentionsservic",{"_index":469,"title":{},"body":{"components/MentionsComponent.html":{}}}],["constructor(organizationsservic",{"_index":505,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["constructor(protect",{"_index":294,"title":{},"body":{"injectables/CommitsService.html":{},"injectables/CountsService.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"injectables/ReputationService.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{}}}],["constructor(realfollow",{"_index":691,"title":{},"body":{"components/TwitterrealfollowersComponent.html":{}}}],["constructor(star",{"_index":572,"title":{},"body":{"components/StarcountComponent.html":{}}}],["constructor(watcherservic",{"_index":723,"title":{},"body":{"components/WatchersComponent.html":{}}}],["contributionschart",{"_index":300,"title":{},"body":{"components/ContributionschartComponent.html":{}}}],["contributionschart'},{'nam",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["contributionschart.component.css",{"_index":301,"title":{},"body":{"components/ContributionschartComponent.html":{}}}],["contributionschart.component.html",{"_index":302,"title":{},"body":{"components/ContributionschartComponent.html":{}}}],["contributionschartcompon",{"_index":49,"title":{"components/ContributionschartComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["core",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":273,"title":{},"body":{"injectables/ChartService.html":{},"injectables/CountsService.html":{}}}],["countsservic",{"_index":313,"title":{"injectables/CountsService.html":{}},"body":{"injectables/CountsService.html":{}}}],["creat",{"_index":265,"title":{},"body":{"injectables/ChartService.html":{}}}],["crystal",{"_index":381,"title":{},"body":{"components/FooterComponent.html":{}}}],["css",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["custom_elements_schema",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["customreus",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["d3",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["dashboard'},{'nam",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["dashboardcompon",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["dasun",{"_index":382,"title":{},"body":{"components/FooterComponent.html":{}}}],["dasunpubudum",{"_index":355,"title":{},"body":{"components/ErrorComponent.html":{}}}],["data",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"injectables/CommitsService.html":{},"injectables/DataService.html":{},"components/HowtoComponent.html":{},"components/StarcountComponent.html":{},"miscellaneous/variables.html":{}}}],["dataservic",{"_index":322,"title":{"injectables/DataService.html":{}},"body":{"injectables/DataService.html":{}}}],["decis",{"_index":365,"title":{},"body":{"components/FooterComponent.html":{}}}],["declar",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HowtoComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"pipes/CapitalizeFirstPipe.html":{},"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"components/ContributionschartComponent.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"components/PreloaderComponent.html":{},"injectables/ReputationService.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{}}}],["depend",{"_index":124,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"components/HowtoComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":784,"title":{},"body":{"index.html":{}}}],["develop",{"_index":363,"title":{},"body":{"components/FooterComponent.html":{},"components/SearchComponent.html":{},"index.html":{}}}],["developer'",{"_index":425,"title":{},"body":{"components/HowtoComponent.html":{}}}],["direct",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":793,"title":{},"body":{"index.html":{}}}],["directori",{"_index":798,"title":{},"body":{"index.html":{}}}],["display",{"_index":584,"title":{},"body":{"components/StarcountComponent.html":{}}}],["dist",{"_index":797,"title":{},"body":{"index.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["dynam",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":806,"title":{},"body":{"index.html":{}}}],["easier",{"_index":368,"title":{},"body":{"components/FooterComponent.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["enabl",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":621,"title":{},"body":{"injectables/ToptagsService.html":{},"index.html":{}}}],["enter",{"_index":348,"title":{},"body":{"components/ErrorComponent.html":{},"components/HowtoComponent.html":{},"components/StackerrorComponent.html":{}}}],["environ",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["environment.product",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environ",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":332,"title":{},"body":{"components/ErrorComponent.html":{},"components/StackerrorComponent.html":{}}}],["error'},{'nam",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["error.component.css",{"_index":333,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":334,"title":{},"body":{"components/ErrorComponent.html":{}}}],["errorcompon",{"_index":53,"title":{"components/ErrorComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["event",{"_index":418,"title":{},"body":{"components/HowtoComponent.html":{}}}],["eventemitt",{"_index":343,"title":{},"body":{"components/ErrorComponent.html":{},"components/HowtoComponent.html":{},"components/StackerrorComponent.html":{}}}],["exampl",{"_index":352,"title":{},"body":{"components/ErrorComponent.html":{},"components/StackerrorComponent.html":{}}}],["execut",{"_index":804,"title":{},"body":{"index.html":{}}}],["export",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/CapitalizeFirstPipe.html":{},"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"components/ContributionschartComponent.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"components/PreloaderComponent.html":{},"classes/Repo.html":{},"injectables/ReputationService.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{},"overview.html":{}}}],["extractchartdata",{"_index":280,"title":{},"body":{"injectables/CommitsService.html":{}}}],["extractchartdata(chartdetail",{"_index":286,"title":{},"body":{"injectables/CommitsService.html":{}}}],["extractchartlabel",{"_index":281,"title":{},"body":{"injectables/CommitsService.html":{}}}],["extractchartlabels(chartdetail",{"_index":289,"title":{},"body":{"injectables/CommitsService.html":{}}}],["fals",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"components/HowtoComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"miscellaneous/variables.html":{}}}],["faster",{"_index":367,"title":{},"body":{"components/FooterComponent.html":{}}}],["fav",{"_index":467,"title":{},"body":{"components/MentionsComponent.html":{},"injectables/MentionsService.html":{}}}],["fav.tot",{"_index":483,"title":{},"body":{"components/MentionsComponent.html":{}}}],["favorit",{"_index":487,"title":{},"body":{"components/MentionsComponent.html":{},"components/TwitterdashboardComponent.html":{}}}],["favorite_bord",{"_index":644,"title":{},"body":{"components/TwitterdashboardComponent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/CapitalizeFirstPipe.html":{},"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"components/ContributionschartComponent.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"components/PreloaderComponent.html":{},"classes/Repo.html":{},"injectables/ReputationService.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{},"index.html":{}}}],["filter_tilt_shiftdevstat",{"_index":539,"title":{},"body":{"components/SearchComponent.html":{}}}],["fix",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["flag",{"_index":800,"title":{},"body":{"index.html":{}}}],["follow",{"_index":642,"title":{},"body":{"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{}}}],["follower.loc",{"_index":676,"title":{},"body":{"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{}}}],["follower.name}}({{follower.screen_nam",{"_index":675,"title":{},"body":{"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{}}}],["followers.us",{"_index":672,"title":{},"body":{"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{}}}],["followersservic",{"_index":659,"title":{},"body":{"components/TwitterfollowersComponent.html":{}}}],["fontcolor",{"_index":589,"title":{},"body":{"components/StarcountComponent.html":{}}}],["fontsiz",{"_index":591,"title":{},"body":{"components/StarcountComponent.html":{}}}],["footer",{"_index":358,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'nam",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["footer.component.css",{"_index":359,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":360,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercompon",{"_index":55,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["for(let",{"_index":267,"title":{},"body":{"injectables/ChartService.html":{}}}],["fork",{"_index":391,"title":{},"body":{"injectables/ForksService.html":{}}}],["forks'},{'nam",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["forkscompon",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["forksservic",{"_index":384,"title":{"injectables/ForksService.html":{}},"body":{"injectables/ForksService.html":{}}}],["formsmodul",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["friend",{"_index":648,"title":{},"body":{"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{}}}],["further",{"_index":808,"title":{},"body":{"index.html":{}}}],["gener",{"_index":776,"title":{},"body":{"index.html":{}}}],["gestureabout",{"_index":544,"title":{},"body":{"components/SearchComponent.html":{}}}],["get",{"_index":371,"title":{"index.html":{}},"body":{"components/FooterComponent.html":{}}}],["getcommitdetail",{"_index":282,"title":{},"body":{"injectables/CommitsService.html":{}}}],["getcommitdetails(usernam",{"_index":291,"title":{},"body":{"injectables/CommitsService.html":{}}}],["getcount",{"_index":315,"title":{},"body":{"injectables/CountsService.html":{}}}],["getcounts(usernam",{"_index":317,"title":{},"body":{"injectables/CountsService.html":{}}}],["getlabelsdata",{"_index":253,"title":{},"body":{"injectables/ChartService.html":{}}}],["getlabelsdata(array",{"_index":256,"title":{},"body":{"injectables/ChartService.html":{}}}],["getrepocount",{"_index":254,"title":{},"body":{"injectables/ChartService.html":{}}}],["getrepocounts(array",{"_index":259,"title":{},"body":{"injectables/ChartService.html":{}}}],["ghchart.rshah.org",{"_index":311,"title":{},"body":{"components/ContributionschartComponent.html":{}}}],["github",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/SearchComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["github'},{'nam",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["githubcompon",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["githubservic",{"_index":133,"title":{"injectables/GithubService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"overview.html":{}}}],["go",{"_index":810,"title":{},"body":{"index.html":{}}}],["hammerj",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":631,"title":{},"body":{"injectables/TwitterService.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{}}}],["handler",{"_index":655,"title":{},"body":{"components/TwitterfollowersComponent.html":{}}}],["hasdata",{"_index":571,"title":{},"body":{"components/StarcountComponent.html":{}}}],["header",{"_index":320,"title":{},"body":{"injectables/CountsService.html":{},"injectables/GithubService.html":{}}}],["help",{"_index":347,"title":{},"body":{"components/ErrorComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"index.html":{}}}],["howto",{"_index":407,"title":{},"body":{"components/HowtoComponent.html":{}}}],["howto'},{'nam",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["howto.component.css",{"_index":408,"title":{},"body":{"components/HowtoComponent.html":{}}}],["howto.component.html",{"_index":409,"title":{},"body":{"components/HowtoComponent.html":{}}}],["howtocompon",{"_index":61,"title":{"components/HowtoComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["http",{"_index":285,"title":{},"body":{"injectables/CommitsService.html":{},"injectables/CountsService.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"injectables/IssuesService.html":{},"injectables/MentionsService.html":{},"injectables/OrganizationsService.html":{},"injectables/ReputationService.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"injectables/UserService.html":{},"injectables/WatchersService.html":{}}}],["http://localhost:4200",{"_index":786,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CommitsService.html":{},"injectables/CountsService.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"injectables/IssuesService.html":{},"injectables/MentionsService.html":{},"injectables/OrganizationsService.html":{},"injectables/ReputationService.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"injectables/UserService.html":{},"injectables/WatchersService.html":{},"overview.html":{}}}],["httpclientmodul",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"injectables/ToptagsService.html":{}}}],["httpheader",{"_index":400,"title":{},"body":{"injectables/GithubService.html":{}}}],["https://github.com/dasunpubudum",{"_index":353,"title":{},"body":{"components/ErrorComponent.html":{}}}],["https://stackoverflow.com/users/7870026/dasun",{"_index":563,"title":{},"body":{"components/StackerrorComponent.html":{}}}],["id",{"_index":468,"title":{},"body":{"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"injectables/ReputationService.html":{},"components/StackerrorComponent.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/UserService.html":{}}}],["id'",{"_index":561,"title":{},"body":{"components/StackerrorComponent.html":{}}}],["id\\'",{"_index":565,"title":{},"body":{"components/StackerrorComponent.html":{}}}],["identifi",{"_index":350,"title":{},"body":{"components/ErrorComponent.html":{},"components/StackerrorComponent.html":{}}}],["if(!this.showhid",{"_index":437,"title":{},"body":{"components/HowtoComponent.html":{}}}],["if(stars[1].length",{"_index":604,"title":{},"body":{"components/StarcountComponent.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"pipes/CapitalizeFirstPipe.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["import",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/CapitalizeFirstPipe.html":{},"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"components/ContributionschartComponent.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"components/PreloaderComponent.html":{},"injectables/ReputationService.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"components/ContributionschartComponent.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"components/PreloaderComponent.html":{},"injectables/ReputationService.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/CapitalizeFirstPipe.html":{},"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"components/ContributionschartComponent.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"components/PreloaderComponent.html":{},"classes/Repo.html":{},"injectables/ReputationService.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{}}}],["info_outlin",{"_index":440,"title":{},"body":{"components/HowtoComponent.html":{}}}],["inform",{"_index":372,"title":{},"body":{"components/FooterComponent.html":{}}}],["inject",{"_index":246,"title":{"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"injectables/IssuesService.html":{},"injectables/MentionsService.html":{},"injectables/OrganizationsService.html":{},"injectables/ReputationService.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"injectables/UserService.html":{},"injectables/WatchersService.html":{}},"body":{"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"injectables/IssuesService.html":{},"injectables/MentionsService.html":{},"injectables/OrganizationsService.html":{},"injectables/ReputationService.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"injectables/UserService.html":{},"injectables/WatchersService.html":{},"overview.html":{}}}],["input",{"_index":305,"title":{},"body":{"components/ContributionschartComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["insert_emoticon",{"_index":647,"title":{},"body":{"components/TwitterdashboardComponent.html":{}}}],["interact",{"_index":428,"title":{},"body":{"components/HowtoComponent.html":{}}}],["internet",{"_index":431,"title":{},"body":{"components/HowtoComponent.html":{}}}],["invalid",{"_index":349,"title":{},"body":{"components/ErrorComponent.html":{},"components/StackerrorComponent.html":{}}}],["involv",{"_index":514,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["isdataload",{"_index":656,"title":{},"body":{"components/TwitterfollowersComponent.html":{}}}],["isdataretriev",{"_index":690,"title":{},"body":{"components/TwitterrealfollowersComponent.html":{}}}],["issu",{"_index":443,"title":{},"body":{"components/IssuesComponent.html":{},"injectables/IssuesService.html":{}}}],["issues'},{'nam",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["issues.component.css",{"_index":444,"title":{},"body":{"components/IssuesComponent.html":{}}}],["issues.component.html",{"_index":445,"title":{},"body":{"components/IssuesComponent.html":{}}}],["issues_count",{"_index":446,"title":{},"body":{"components/IssuesComponent.html":{}}}],["issuescompon",{"_index":63,"title":{"components/IssuesComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["issuesservic",{"_index":442,"title":{"injectables/IssuesService.html":{}},"body":{"components/IssuesComponent.html":{},"injectables/IssuesService.html":{}}}],["jqueri",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":805,"title":{},"body":{"index.html":{}}}],["katyperri",{"_index":667,"title":{},"body":{"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{}}}],["label",{"_index":266,"title":{},"body":{"injectables/ChartService.html":{},"components/StarcountComponent.html":{}}}],["labelarray",{"_index":260,"title":{},"body":{"injectables/ChartService.html":{}}}],["lang",{"_index":275,"title":{},"body":{"injectables/ChartService.html":{}}}],["languag",{"_index":586,"title":{},"body":{"components/StarcountComponent.html":{}}}],["left",{"_index":594,"title":{},"body":{"components/StarcountComponent.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["link",{"_index":378,"title":{},"body":{"components/FooterComponent.html":{}}}],["littl",{"_index":430,"title":{},"body":{"components/HowtoComponent.html":{}}}],["live_helphelp",{"_index":543,"title":{},"body":{"components/SearchComponent.html":{}}}],["load",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["local",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["maintainaspectratio",{"_index":583,"title":{},"body":{"components/StarcountComponent.html":{}}}],["make",{"_index":366,"title":{},"body":{"components/FooterComponent.html":{}}}],["map(count",{"_index":321,"title":{},"body":{"injectables/CountsService.html":{}}}],["map(data",{"_index":296,"title":{},"body":{"injectables/CommitsService.html":{}}}],["map(fav",{"_index":499,"title":{},"body":{"injectables/MentionsService.html":{}}}],["map(fork",{"_index":390,"title":{},"body":{"injectables/ForksService.html":{}}}],["map(issu",{"_index":461,"title":{},"body":{"injectables/IssuesService.html":{}}}],["map(ment",{"_index":497,"title":{},"body":{"injectables/MentionsService.html":{}}}],["map(org",{"_index":519,"title":{},"body":{"injectables/OrganizationsService.html":{}}}],["map(quest",{"_index":717,"title":{},"body":{"injectables/UserService.html":{}}}],["map(r",{"_index":403,"title":{},"body":{"injectables/GithubService.html":{},"injectables/TwitterService.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{}}}],["map(reput",{"_index":532,"title":{},"body":{"injectables/ReputationService.html":{}}}],["map(star",{"_index":609,"title":{},"body":{"injectables/StarsService.html":{}}}],["map(tag",{"_index":615,"title":{},"body":{"injectables/TagsService.html":{}}}],["map(us",{"_index":715,"title":{},"body":{"injectables/UserService.html":{}}}],["map(watch",{"_index":736,"title":{},"body":{"injectables/WatchersService.html":{}}}],["match",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/CapitalizeFirstPipe.html":{},"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"components/ContributionschartComponent.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"components/PreloaderComponent.html":{},"classes/Repo.html":{},"injectables/ReputationService.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"components/ErrorComponent.html":{},"components/StackerrorComponent.html":{},"dependencies.html":{}}}],["materializeact",{"_index":344,"title":{},"body":{"components/ErrorComponent.html":{},"components/StackerrorComponent.html":{}}}],["materializemodul",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["mention",{"_index":464,"title":{},"body":{"components/MentionsComponent.html":{},"injectables/MentionsService.html":{}}}],["mentions'},{'nam",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["mentions.component.css",{"_index":465,"title":{},"body":{"components/MentionsComponent.html":{}}}],["mentions.component.html",{"_index":466,"title":{},"body":{"components/MentionsComponent.html":{}}}],["mentions.tot",{"_index":481,"title":{},"body":{"components/MentionsComponent.html":{}}}],["mentionscompon",{"_index":65,"title":{"components/MentionsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["mentionsservic",{"_index":463,"title":{"injectables/MentionsService.html":{}},"body":{"components/MentionsComponent.html":{},"injectables/MentionsService.html":{}}}],["menu",{"_index":541,"title":{},"body":{"components/SearchComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"pipes/CapitalizeFirstPipe.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["method",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{},"pipes/CapitalizeFirstPipe.html":{},"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"components/ContributionschartComponent.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"components/PreloaderComponent.html":{},"injectables/ReputationService.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{}}}],["miscellan",{"_index":820,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modalact",{"_index":335,"title":{},"body":{"components/ErrorComponent.html":{},"components/StackerrorComponent.html":{}}}],["models/twitt",{"_index":641,"title":{},"body":{"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{}}}],["modul",{"_index":122,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":809,"title":{},"body":{"index.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"pipes/CapitalizeFirstPipe.html":{},"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"components/ContributionschartComponent.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"components/PreloaderComponent.html":{},"injectables/ReputationService.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{},"index.html":{}}}],["navig",{"_index":785,"title":{},"body":{"index.html":{}}}],["new",{"_index":342,"title":{},"body":{"components/ErrorComponent.html":{},"components/HowtoComponent.html":{},"components/StackerrorComponent.html":{},"index.html":{}}}],["ng",{"_index":782,"title":{},"body":{"index.html":{}}}],["ng2",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ng4",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"dependencies.html":{}}}],["ng4loadingspinnermodul",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["ng4loadingspinnermodule.forroot",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["ng4twittertimelinemodul",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodul",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["null",{"_index":242,"title":{},"body":{"pipes/CapitalizeFirstPipe.html":{}}}],["number",{"_index":452,"title":{},"body":{"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/WatchersComponent.html":{}}}],["nvd3",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["object",{"_index":581,"title":{},"body":{"components/StarcountComponent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(chartdetail",{"_index":297,"title":{},"body":{"injectables/CommitsService.html":{}}}],["object.values(chartdetail",{"_index":298,"title":{},"body":{"injectables/CommitsService.html":{}}}],["okay",{"_index":356,"title":{},"body":{"components/ErrorComponent.html":{},"components/StackerrorComponent.html":{}}}],["on",{"_index":373,"title":{},"body":{"components/FooterComponent.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["openmod",{"_index":337,"title":{},"body":{"components/ErrorComponent.html":{},"components/StackerrorComponent.html":{}}}],["opentaptarget",{"_index":413,"title":{},"body":{"components/HowtoComponent.html":{}}}],["option",{"_index":240,"title":{},"body":{"pipes/CapitalizeFirstPipe.html":{},"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"injectables/ReputationService.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{}}}],["org",{"_index":513,"title":{},"body":{"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{}}}],["organ",{"_index":376,"title":{},"body":{"components/FooterComponent.html":{},"components/OrganizationsComponent.html":{}}}],["organizations'},{'nam",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["organizations.component.css",{"_index":502,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["organizations.component.html",{"_index":503,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["organizations_count",{"_index":504,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["organizationscompon",{"_index":67,"title":{"components/OrganizationsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["organizationsservic",{"_index":501,"title":{"injectables/OrganizationsService.html":{}},"body":{"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{}}}],["out",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":415,"title":{},"body":{"components/HowtoComponent.html":{}}}],["overflow",{"_index":546,"title":{},"body":{"components/SearchComponent.html":{}}}],["overview",{"_index":816,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":737,"title":{"dependencies.html":{}},"body":{}}],["paramet",{"_index":239,"title":{},"body":{"pipes/CapitalizeFirstPipe.html":{},"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"injectables/ReputationService.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{}}}],["path",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["per",{"_index":585,"title":{},"body":{"components/StarcountComponent.html":{}}}],["persongithub",{"_index":542,"title":{},"body":{"components/SearchComponent.html":{}}}],["pipe",{"_index":232,"title":{"pipes/CapitalizeFirstPipe.html":{}},"body":{"pipes/CapitalizeFirstPipe.html":{},"overview.html":{}}}],["pipes/capitalize.pip",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":241,"title":{},"body":{"pipes/CapitalizeFirstPipe.html":{}}}],["portal",{"_index":374,"title":{},"body":{"components/FooterComponent.html":{}}}],["posit",{"_index":593,"title":{},"body":{"components/StarcountComponent.html":{}}}],["preload",{"_index":521,"title":{},"body":{"components/PreloaderComponent.html":{}}}],["preloader'},{'nam",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["preloader.component.css",{"_index":522,"title":{},"body":{"components/PreloaderComponent.html":{}}}],["preloader.component.html",{"_index":523,"title":{},"body":{"components/PreloaderComponent.html":{}}}],["preloadercompon",{"_index":69,"title":{"components/PreloaderComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["privat",{"_index":249,"title":{},"body":{"injectables/ChartService.html":{}}}],["prod",{"_index":799,"title":{},"body":{"index.html":{}}}],["product",{"_index":801,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":351,"title":{},"body":{"components/ErrorComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{}}}],["project",{"_index":379,"title":{},"body":{"components/FooterComponent.html":{},"index.html":{}}}],["properti",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"components/ContributionschartComponent.html":{},"injectables/DataService.html":{},"components/ErrorComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["protect",{"_index":410,"title":{},"body":{"components/HowtoComponent.html":{},"components/StarcountComponent.html":{}}}],["protractor",{"_index":807,"title":{},"body":{"index.html":{}}}],["provid",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["public",{"_index":252,"title":{},"body":{"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"components/ContributionschartComponent.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"injectables/ForksService.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"injectables/ReputationService.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{}}}],["pubudum",{"_index":383,"title":{},"body":{"components/FooterComponent.html":{},"components/StackerrorComponent.html":{}}}],["purpos",{"_index":375,"title":{},"body":{"components/FooterComponent.html":{}}}],["question",{"_index":488,"title":{},"body":{"components/MentionsComponent.html":{},"injectables/UserService.html":{}}}],["re",{"_index":404,"title":{},"body":{"injectables/GithubService.html":{},"injectables/TwitterService.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{}}}],["readm",{"_index":812,"title":{},"body":{"index.html":{}}}],["realfollow",{"_index":693,"title":{},"body":{"components/TwitterrealfollowersComponent.html":{}}}],["relat",{"_index":377,"title":{},"body":{"components/FooterComponent.html":{}}}],["reliabl",{"_index":369,"title":{},"body":{"components/FooterComponent.html":{}}}],["reload",{"_index":788,"title":{},"body":{"index.html":{}}}],["replac",{"_index":324,"title":{},"body":{"injectables/DataService.html":{}}}],["replace(data",{"_index":326,"title":{},"body":{"injectables/DataService.html":{}}}],["repo",{"_index":268,"title":{"classes/Repo.html":{}},"body":{"injectables/ChartService.html":{},"components/IssuesComponent.html":{},"classes/Repo.html":{}}}],["repo.languag",{"_index":276,"title":{},"body":{"injectables/ChartService.html":{}}}],["repositori",{"_index":380,"title":{},"body":{"components/FooterComponent.html":{},"components/IssuesComponent.html":{}}}],["reputation'},{'nam",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["reputation.item",{"_index":533,"title":{},"body":{"injectables/ReputationService.html":{}}}],["reputationcompon",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["reputationservic",{"_index":527,"title":{"injectables/ReputationService.html":{}},"body":{"injectables/ReputationService.html":{}}}],["reset",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["respons",{"_index":582,"title":{},"body":{"components/StarcountComponent.html":{}}}],["result",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/CapitalizeFirstPipe.html":{},"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"components/ContributionschartComponent.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"components/PreloaderComponent.html":{},"classes/Repo.html":{},"injectables/ReputationService.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{},"pipes/CapitalizeFirstPipe.html":{},"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"components/ContributionschartComponent.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"components/PreloaderComponent.html":{},"injectables/ReputationService.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{}}}],["root",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["routereusestrategi",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodul",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["routertestingmodul",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":781,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["rxjs/add/operator/map",{"_index":401,"title":{},"body":{"injectables/GithubService.html":{}}}],["rxjs/behaviorsubject",{"_index":329,"title":{},"body":{"injectables/DataService.html":{}}}],["scaffold",{"_index":791,"title":{},"body":{"index.html":{}}}],["schema",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["search",{"_index":427,"title":{},"body":{"components/HowtoComponent.html":{},"components/SearchComponent.html":{}}}],["search'},{'nam",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["search.component.css",{"_index":535,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.html",{"_index":536,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchcompon",{"_index":73,"title":{"components/SearchComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["self",{"_index":271,"title":{},"body":{"injectables/ChartService.html":{}}}],["self.indexof(elem",{"_index":272,"title":{},"body":{"injectables/ChartService.html":{}}}],["serv",{"_index":783,"title":{},"body":{"index.html":{}}}],["server",{"_index":780,"title":{},"body":{"index.html":{}}}],["services/github/gihubservice.servic",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["services/github/issues.servic",{"_index":453,"title":{},"body":{"components/IssuesComponent.html":{}}}],["services/github/organizations.servic",{"_index":510,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["services/github/stars.servic",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"components/StarcountComponent.html":{}}}],["services/github/watchers.servic",{"_index":729,"title":{},"body":{"components/WatchersComponent.html":{}}}],["services/stack/mentions.servic",{"_index":476,"title":{},"body":{"components/MentionsComponent.html":{}}}],["services/twitter/twitterfollowers.servic",{"_index":665,"title":{},"body":{"components/TwitterfollowersComponent.html":{}}}],["services/twitter/twitterreal.servic",{"_index":698,"title":{},"body":{"components/TwitterrealfollowersComponent.html":{}}}],["serviceworkermodul",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('/ngsw",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["settimeout",{"_index":700,"title":{},"body":{"components/TwitterrealfollowersComponent.html":{}}}],["shoulddetach",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["showhid",{"_index":411,"title":{},"body":{"components/HowtoComponent.html":{}}}],["social",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/CapitalizeFirstPipe.html":{},"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"components/ContributionschartComponent.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"components/PreloaderComponent.html":{},"classes/Repo.html":{},"injectables/ReputationService.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{},"index.html":{}}}],["spinner",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["src/.../app.module.t",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/footer/footer.component.t",{"_index":357,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:12",{"_index":362,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:8",{"_index":361,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/github/about/about.component.t",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/github/about/about.component.ts:12",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/github/about/about.component.ts:8",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/github/contributionschart/contributionschart.component.t",{"_index":299,"title":{},"body":{"components/ContributionschartComponent.html":{}}}],["src/app/components/github/contributionschart/contributionschart.component.ts:10",{"_index":307,"title":{},"body":{"components/ContributionschartComponent.html":{}}}],["src/app/components/github/contributionschart/contributionschart.component.ts:11",{"_index":306,"title":{},"body":{"components/ContributionschartComponent.html":{}}}],["src/app/components/github/contributionschart/contributionschart.component.ts:17",{"_index":309,"title":{},"body":{"components/ContributionschartComponent.html":{}}}],["src/app/components/github/contributionschart/contributionschart.component.ts:20",{"_index":308,"title":{},"body":{"components/ContributionschartComponent.html":{}}}],["src/app/components/github/error/error.component.t",{"_index":331,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/components/github/error/error.component.ts:11",{"_index":338,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/components/github/error/error.component.ts:15",{"_index":340,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/components/github/error/error.component.ts:18",{"_index":341,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/components/github/error/error.component.ts:22",{"_index":339,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/components/github/howto/howto.component.t",{"_index":406,"title":{},"body":{"components/HowtoComponent.html":{}}}],["src/app/components/github/howto/howto.component.ts:10",{"_index":433,"title":{},"body":{"components/HowtoComponent.html":{}}}],["src/app/components/github/howto/howto.component.ts:12",{"_index":417,"title":{},"body":{"components/HowtoComponent.html":{}}}],["src/app/components/github/howto/howto.component.ts:16",{"_index":419,"title":{},"body":{"components/HowtoComponent.html":{}}}],["src/app/components/github/howto/howto.component.ts:18",{"_index":421,"title":{},"body":{"components/HowtoComponent.html":{}}}],["src/app/components/github/howto/howto.component.ts:20",{"_index":422,"title":{},"body":{"components/HowtoComponent.html":{}}}],["src/app/components/github/howto/howto.component.ts:23",{"_index":420,"title":{},"body":{"components/HowtoComponent.html":{}}}],["src/app/components/github/howto/howto.component.ts:27",{"_index":423,"title":{},"body":{"components/HowtoComponent.html":{}}}],["src/app/components/github/issues/issues.component.t",{"_index":441,"title":{},"body":{"components/IssuesComponent.html":{}}}],["src/app/components/github/issues/issues.component.ts:12",{"_index":449,"title":{},"body":{"components/IssuesComponent.html":{}}}],["src/app/components/github/issues/issues.component.ts:13",{"_index":448,"title":{},"body":{"components/IssuesComponent.html":{}}}],["src/app/components/github/issues/issues.component.ts:19",{"_index":451,"title":{},"body":{"components/IssuesComponent.html":{}}}],["src/app/components/github/issues/issues.component.ts:23",{"_index":450,"title":{},"body":{"components/IssuesComponent.html":{}}}],["src/app/components/github/organizations/organizations.component.t",{"_index":500,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["src/app/components/github/organizations/organizations.component.ts:13",{"_index":507,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["src/app/components/github/organizations/organizations.component.ts:14",{"_index":506,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["src/app/components/github/organizations/organizations.component.ts:20",{"_index":509,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["src/app/components/github/organizations/organizations.component.ts:24",{"_index":508,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["src/app/components/github/starcount/starcount.component.t",{"_index":566,"title":{},"body":{"components/StarcountComponent.html":{}}}],["src/app/components/github/starcount/starcount.component.ts:12",{"_index":575,"title":{},"body":{"components/StarcountComponent.html":{}}}],["src/app/components/github/starcount/starcount.component.ts:13",{"_index":579,"title":{},"body":{"components/StarcountComponent.html":{}}}],["src/app/components/github/starcount/starcount.component.ts:14",{"_index":580,"title":{},"body":{"components/StarcountComponent.html":{}}}],["src/app/components/github/starcount/starcount.component.ts:15",{"_index":578,"title":{},"body":{"components/StarcountComponent.html":{}}}],["src/app/components/github/starcount/starcount.component.ts:16",{"_index":596,"title":{},"body":{"components/StarcountComponent.html":{}}}],["src/app/components/github/starcount/starcount.component.ts:18",{"_index":595,"title":{},"body":{"components/StarcountComponent.html":{}}}],["src/app/components/github/starcount/starcount.component.ts:32",{"_index":573,"title":{},"body":{"components/StarcountComponent.html":{}}}],["src/app/components/github/starcount/starcount.component.ts:48",{"_index":577,"title":{},"body":{"components/StarcountComponent.html":{}}}],["src/app/components/github/starcount/starcount.component.ts:52",{"_index":576,"title":{},"body":{"components/StarcountComponent.html":{}}}],["src/app/components/github/watchers/watchers.component.t",{"_index":718,"title":{},"body":{"components/WatchersComponent.html":{}}}],["src/app/components/github/watchers/watchers.component.ts:12",{"_index":726,"title":{},"body":{"components/WatchersComponent.html":{}}}],["src/app/components/github/watchers/watchers.component.ts:13",{"_index":724,"title":{},"body":{"components/WatchersComponent.html":{}}}],["src/app/components/github/watchers/watchers.component.ts:20",{"_index":728,"title":{},"body":{"components/WatchersComponent.html":{}}}],["src/app/components/github/watchers/watchers.component.ts:24",{"_index":727,"title":{},"body":{"components/WatchersComponent.html":{}}}],["src/app/components/models/repo.t",{"_index":526,"title":{},"body":{"classes/Repo.html":{}}}],["src/app/components/preloader/preloader.component.t",{"_index":520,"title":{},"body":{"components/PreloaderComponent.html":{}}}],["src/app/components/preloader/preloader.component.ts:12",{"_index":525,"title":{},"body":{"components/PreloaderComponent.html":{}}}],["src/app/components/preloader/preloader.component.ts:8",{"_index":524,"title":{},"body":{"components/PreloaderComponent.html":{}}}],["src/app/components/search/search.component.t",{"_index":534,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:12",{"_index":538,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:8",{"_index":537,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/stackoverflow/mentions/mentions.component.t",{"_index":462,"title":{},"body":{"components/MentionsComponent.html":{}}}],["src/app/components/stackoverflow/mentions/mentions.component.ts:12",{"_index":471,"title":{},"body":{"components/MentionsComponent.html":{}}}],["src/app/components/stackoverflow/mentions/mentions.component.ts:13",{"_index":472,"title":{},"body":{"components/MentionsComponent.html":{}}}],["src/app/components/stackoverflow/mentions/mentions.component.ts:14",{"_index":475,"title":{},"body":{"components/MentionsComponent.html":{}}}],["src/app/components/stackoverflow/mentions/mentions.component.ts:15",{"_index":470,"title":{},"body":{"components/MentionsComponent.html":{}}}],["src/app/components/stackoverflow/mentions/mentions.component.ts:30",{"_index":474,"title":{},"body":{"components/MentionsComponent.html":{}}}],["src/app/components/stackoverflow/mentions/mentions.component.ts:33",{"_index":473,"title":{},"body":{"components/MentionsComponent.html":{}}}],["src/app/components/stackoverflow/stackerror/stackerror.component.t",{"_index":552,"title":{},"body":{"components/StackerrorComponent.html":{}}}],["src/app/components/stackoverflow/stackerror/stackerror.component.ts:11",{"_index":556,"title":{},"body":{"components/StackerrorComponent.html":{}}}],["src/app/components/stackoverflow/stackerror/stackerror.component.ts:15",{"_index":558,"title":{},"body":{"components/StackerrorComponent.html":{}}}],["src/app/components/stackoverflow/stackerror/stackerror.component.ts:17",{"_index":559,"title":{},"body":{"components/StackerrorComponent.html":{}}}],["src/app/components/stackoverflow/stackerror/stackerror.component.ts:21",{"_index":557,"title":{},"body":{"components/StackerrorComponent.html":{}}}],["src/app/components/twitter/twitterdashboard/twitterdashboard.component.t",{"_index":635,"title":{},"body":{"components/TwitterdashboardComponent.html":{}}}],["src/app/components/twitter/twitterdashboard/twitterdashboard.component.ts:11",{"_index":639,"title":{},"body":{"components/TwitterdashboardComponent.html":{}}}],["src/app/components/twitter/twitterdashboard/twitterdashboard.component.ts:15",{"_index":640,"title":{},"body":{"components/TwitterdashboardComponent.html":{}}}],["src/app/components/twitter/twitterfollowers/twitterfollowers.component.t",{"_index":650,"title":{},"body":{"components/TwitterfollowersComponent.html":{}}}],["src/app/components/twitter/twitterfollowers/twitterfollowers.component.ts:13",{"_index":660,"title":{},"body":{"components/TwitterfollowersComponent.html":{}}}],["src/app/components/twitter/twitterfollowers/twitterfollowers.component.ts:14",{"_index":664,"title":{},"body":{"components/TwitterfollowersComponent.html":{}}}],["src/app/components/twitter/twitterfollowers/twitterfollowers.component.ts:15",{"_index":663,"title":{},"body":{"components/TwitterfollowersComponent.html":{}}}],["src/app/components/twitter/twitterfollowers/twitterfollowers.component.ts:16",{"_index":658,"title":{},"body":{"components/TwitterfollowersComponent.html":{}}}],["src/app/components/twitter/twitterfollowers/twitterfollowers.component.ts:23",{"_index":662,"title":{},"body":{"components/TwitterfollowersComponent.html":{}}}],["src/app/components/twitter/twitterfollowers/twitterfollowers.component.ts:31",{"_index":661,"title":{},"body":{"components/TwitterfollowersComponent.html":{}}}],["src/app/components/twitter/twitterrealfollowers/twitterrealfollowers.component.t",{"_index":686,"title":{},"body":{"components/TwitterrealfollowersComponent.html":{}}}],["src/app/components/twitter/twitterrealfollowers/twitterrealfollowers.component.ts:12",{"_index":694,"title":{},"body":{"components/TwitterrealfollowersComponent.html":{}}}],["src/app/components/twitter/twitterrealfollowers/twitterrealfollowers.component.ts:13",{"_index":697,"title":{},"body":{"components/TwitterrealfollowersComponent.html":{}}}],["src/app/components/twitter/twitterrealfollowers/twitterrealfollowers.component.ts:14",{"_index":692,"title":{},"body":{"components/TwitterrealfollowersComponent.html":{}}}],["src/app/components/twitter/twitterrealfollowers/twitterrealfollowers.component.ts:21",{"_index":696,"title":{},"body":{"components/TwitterrealfollowersComponent.html":{}}}],["src/app/components/twitter/twitterrealfollowers/twitterrealfollowers.component.ts:31",{"_index":695,"title":{},"body":{"components/TwitterrealfollowersComponent.html":{}}}],["src/app/pipes/capitalize.pipe.t",{"_index":233,"title":{},"body":{"pipes/CapitalizeFirstPipe.html":{}}}],["src/app/pipes/capitalize.pipe.ts:8",{"_index":238,"title":{},"body":{"pipes/CapitalizeFirstPipe.html":{}}}],["src/app/services/github/chart.service.t",{"_index":248,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/services/github/chart.service.ts:15",{"_index":257,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/services/github/chart.service.ts:30",{"_index":261,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/services/github/chart.service.ts:7",{"_index":262,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/services/github/chart.service.ts:8",{"_index":255,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/services/github/commits.service.t",{"_index":279,"title":{},"body":{"injectables/CommitsService.html":{}}}],["src/app/services/github/commits.service.ts:10",{"_index":292,"title":{},"body":{"injectables/CommitsService.html":{}}}],["src/app/services/github/commits.service.ts:15",{"_index":290,"title":{},"body":{"injectables/CommitsService.html":{}}}],["src/app/services/github/commits.service.ts:19",{"_index":287,"title":{},"body":{"injectables/CommitsService.html":{}}}],["src/app/services/github/commits.service.ts:5",{"_index":284,"title":{},"body":{"injectables/CommitsService.html":{}}}],["src/app/services/github/counts.service.t",{"_index":314,"title":{},"body":{"injectables/CountsService.html":{}}}],["src/app/services/github/counts.service.ts:5",{"_index":316,"title":{},"body":{"injectables/CountsService.html":{}}}],["src/app/services/github/counts.service.ts:9",{"_index":318,"title":{},"body":{"injectables/CountsService.html":{}}}],["src/app/services/github/data.service.t",{"_index":323,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/github/data.service.ts:11",{"_index":327,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/github/data.service.ts:7",{"_index":325,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/github/forks.service.t",{"_index":385,"title":{},"body":{"injectables/ForksService.html":{}}}],["src/app/services/github/forks.service.ts:5",{"_index":386,"title":{},"body":{"injectables/ForksService.html":{}}}],["src/app/services/github/forks.service.ts:9",{"_index":388,"title":{},"body":{"injectables/ForksService.html":{}}}],["src/app/services/github/gihubservice.service.t",{"_index":392,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/app/services/github/gihubservice.service.ts:12",{"_index":397,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/app/services/github/gihubservice.service.ts:17",{"_index":399,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/app/services/github/gihubservice.service.ts:8",{"_index":395,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/app/services/github/issues.service.t",{"_index":457,"title":{},"body":{"injectables/IssuesService.html":{}}}],["src/app/services/github/issues.service.ts:5",{"_index":458,"title":{},"body":{"injectables/IssuesService.html":{}}}],["src/app/services/github/issues.service.ts:9",{"_index":459,"title":{},"body":{"injectables/IssuesService.html":{}}}],["src/app/services/github/organizations.service.t",{"_index":515,"title":{},"body":{"injectables/OrganizationsService.html":{}}}],["src/app/services/github/organizations.service.ts:5",{"_index":516,"title":{},"body":{"injectables/OrganizationsService.html":{}}}],["src/app/services/github/organizations.service.ts:9",{"_index":517,"title":{},"body":{"injectables/OrganizationsService.html":{}}}],["src/app/services/github/stars.service.t",{"_index":605,"title":{},"body":{"injectables/StarsService.html":{}}}],["src/app/services/github/stars.service.ts:5",{"_index":606,"title":{},"body":{"injectables/StarsService.html":{}}}],["src/app/services/github/stars.service.ts:9",{"_index":607,"title":{},"body":{"injectables/StarsService.html":{}}}],["src/app/services/github/watchers.service.t",{"_index":732,"title":{},"body":{"injectables/WatchersService.html":{}}}],["src/app/services/github/watchers.service.ts:5",{"_index":733,"title":{},"body":{"injectables/WatchersService.html":{}}}],["src/app/services/github/watchers.service.ts:9",{"_index":734,"title":{},"body":{"injectables/WatchersService.html":{}}}],["src/app/services/stack/mentions.service.t",{"_index":489,"title":{},"body":{"injectables/MentionsService.html":{}}}],["src/app/services/stack/mentions.service.ts:14",{"_index":495,"title":{},"body":{"injectables/MentionsService.html":{}}}],["src/app/services/stack/mentions.service.ts:5",{"_index":491,"title":{},"body":{"injectables/MentionsService.html":{}}}],["src/app/services/stack/mentions.service.ts:9",{"_index":493,"title":{},"body":{"injectables/MentionsService.html":{}}}],["src/app/services/stack/reputation.service.t",{"_index":528,"title":{},"body":{"injectables/ReputationService.html":{}}}],["src/app/services/stack/reputation.service.ts:5",{"_index":529,"title":{},"body":{"injectables/ReputationService.html":{}}}],["src/app/services/stack/reputation.service.ts:9",{"_index":530,"title":{},"body":{"injectables/ReputationService.html":{}}}],["src/app/services/stack/tags.service.t",{"_index":611,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/app/services/stack/tags.service.ts:5",{"_index":612,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/app/services/stack/tags.service.ts:9",{"_index":613,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/app/services/stack/toptags.service.t",{"_index":618,"title":{},"body":{"injectables/ToptagsService.html":{}}}],["src/app/services/stack/toptags.service.ts:10",{"_index":620,"title":{},"body":{"injectables/ToptagsService.html":{}}}],["src/app/services/stack/toptags.service.ts:5",{"_index":619,"title":{},"body":{"injectables/ToptagsService.html":{}}}],["src/app/services/stack/user.service.t",{"_index":706,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/stack/user.service.ts:10",{"_index":709,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/stack/user.service.ts:15",{"_index":711,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/stack/user.service.ts:6",{"_index":708,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/twitter/twitter.service.t",{"_index":627,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/app/services/twitter/twitter.service.ts:10",{"_index":630,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/app/services/twitter/twitter.service.ts:6",{"_index":628,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/app/services/twitter/twitterfollowers.service.t",{"_index":677,"title":{},"body":{"injectables/TwitterfollowersService.html":{}}}],["src/app/services/twitter/twitterfollowers.service.ts:10",{"_index":679,"title":{},"body":{"injectables/TwitterfollowersService.html":{}}}],["src/app/services/twitter/twitterfollowers.service.ts:6",{"_index":678,"title":{},"body":{"injectables/TwitterfollowersService.html":{}}}],["src/app/services/twitter/twitterreal.service.t",{"_index":682,"title":{},"body":{"injectables/TwitterrealService.html":{}}}],["src/app/services/twitter/twitterreal.service.ts:5",{"_index":683,"title":{},"body":{"injectables/TwitterrealService.html":{}}}],["src/app/services/twitter/twitterreal.service.ts:9",{"_index":684,"title":{},"body":{"injectables/TwitterrealService.html":{}}}],["src/environments/environment.prod.t",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stack",{"_index":545,"title":{},"body":{"components/SearchComponent.html":{}}}],["stackerror",{"_index":553,"title":{},"body":{"components/StackerrorComponent.html":{}}}],["stackerror'},{'nam",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["stackerror.component.css",{"_index":554,"title":{},"body":{"components/StackerrorComponent.html":{}}}],["stackerror.component.html",{"_index":555,"title":{},"body":{"components/StackerrorComponent.html":{}}}],["stackerrorcompon",{"_index":75,"title":{"components/StackerrorComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["stackoverflow",{"_index":560,"title":{},"body":{"components/StackerrorComponent.html":{}}}],["stackoverflow'},{'nam",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["stackoverflowcompon",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["stackus",{"_index":712,"title":{},"body":{"injectables/UserService.html":{}}}],["star",{"_index":574,"title":{},"body":{"components/StarcountComponent.html":{},"injectables/StarsService.html":{}}}],["starcount",{"_index":567,"title":{},"body":{"components/StarcountComponent.html":{}}}],["starcount'},{'nam",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["starcount.component.css",{"_index":568,"title":{},"body":{"components/StarcountComponent.html":{}}}],["starcount.component.html",{"_index":569,"title":{},"body":{"components/StarcountComponent.html":{}}}],["starcountcompon",{"_index":79,"title":{"components/StarcountComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["stars[0",{"_index":601,"title":{},"body":{"components/StarcountComponent.html":{}}}],["stars[1",{"_index":600,"title":{},"body":{"components/StarcountComponent.html":{}}}],["starsservic",{"_index":177,"title":{"injectables/StarsService.html":{}},"body":{"modules/AppModule.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{}}}],["start",{"_index":774,"title":{"index.html":{}},"body":{}}],["statist",{"_index":364,"title":{},"body":{"components/FooterComponent.html":{}}}],["status",{"_index":645,"title":{},"body":{"components/TwitterdashboardComponent.html":{}}}],["storag",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["store",{"_index":796,"title":{},"body":{"index.html":{}}}],["strategies/customreus",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"pipes/CapitalizeFirstPipe.html":{},"injectables/CommitsService.html":{},"components/ContributionschartComponent.html":{},"injectables/CountsService.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"injectables/ReputationService.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["suggest",{"_index":354,"title":{},"body":{"components/ErrorComponent.html":{},"components/StackerrorComponent.html":{}}}],["support",{"_index":813,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":814,"title":{},"body":{"modules.html":{}}}],["tag",{"_index":616,"title":{},"body":{"injectables/TagsService.html":{}}}],["tags'},{'nam",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["tagscompon",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["tagsservic",{"_index":610,"title":{"injectables/TagsService.html":{}},"body":{"injectables/TagsService.html":{}}}],["tap",{"_index":547,"title":{},"body":{"components/SearchComponent.html":{}}}],["taptargetact",{"_index":416,"title":{},"body":{"components/HowtoComponent.html":{}}}],["target').taptarget('clos",{"_index":549,"title":{},"body":{"components/SearchComponent.html":{}}}],["target').taptarget('open",{"_index":548,"title":{},"body":{"components/SearchComponent.html":{}}}],["target\\').taptarget(\\'clos",{"_index":551,"title":{},"body":{"components/SearchComponent.html":{}}}],["target\\').taptarget(\\'open",{"_index":550,"title":{},"body":{"components/SearchComponent.html":{}}}],["tempcompon",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["test",{"_index":803,"title":{},"body":{"index.html":{}}}],["text",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"components/HowtoComponent.html":{},"components/SearchComponent.html":{},"components/StarcountComponent.html":{}}}],["this._get",{"_index":455,"title":{},"body":{"components/IssuesComponent.html":{},"components/OrganizationsComponent.html":{},"components/StarcountComponent.html":{},"components/WatchersComponent.html":{}}}],["this.array",{"_index":330,"title":{},"body":{"injectables/DataService.html":{}}}],["this.chart",{"_index":597,"title":{},"body":{"components/StarcountComponent.html":{}}}],["this.chart[0",{"_index":602,"title":{},"body":{"components/StarcountComponent.html":{}}}],["this.chartdata",{"_index":263,"title":{},"body":{"injectables/ChartService.html":{},"components/StarcountComponent.html":{}}}],["this.chartdata.push(count",{"_index":277,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartlabel",{"_index":264,"title":{},"body":{"injectables/ChartService.html":{},"components/StarcountComponent.html":{}}}],["this.chartlabels.filter((elem",{"_index":270,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartlabels.push(repo.languag",{"_index":269,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.closetaptarget",{"_index":439,"title":{},"body":{"components/HowtoComponent.html":{}}}],["this.fav",{"_index":478,"title":{},"body":{"components/MentionsComponent.html":{}}}],["this.follow",{"_index":671,"title":{},"body":{"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{}}}],["this.followersservice._get(\"katyperry\").subscribe((follow",{"_index":669,"title":{},"body":{"components/TwitterfollowersComponent.html":{}}}],["this.followersservice._get(this.handle).subscribe((follow",{"_index":674,"title":{},"body":{"components/TwitterfollowersComponent.html":{}}}],["this.handl",{"_index":666,"title":{},"body":{"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{}}}],["this.hasdata",{"_index":598,"title":{},"body":{"components/StarcountComponent.html":{}}}],["this.http.get(\"/getcommitsadapterre/\".concat(usernam",{"_index":295,"title":{},"body":{"injectables/CommitsService.html":{}}}],["this.http.get(\"/getcounts/\".concat(usernam",{"_index":319,"title":{},"body":{"injectables/CountsService.html":{}}}],["this.http.get(\"/getforks/\".concat(usernam",{"_index":389,"title":{},"body":{"injectables/ForksService.html":{}}}],["this.http.get(\"/getissues/\".concat(usernam",{"_index":460,"title":{},"body":{"injectables/IssuesService.html":{}}}],["this.http.get(\"/getorganizations/\".concat(usernam",{"_index":518,"title":{},"body":{"injectables/OrganizationsService.html":{}}}],["this.http.get(\"/getstackuser/\".concat(id",{"_index":714,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(\"/getstackuserfavorites/\".concat(id",{"_index":498,"title":{},"body":{"injectables/MentionsService.html":{}}}],["this.http.get(\"/getstackusermensions/\".concat(id",{"_index":496,"title":{},"body":{"injectables/MentionsService.html":{}}}],["this.http.get(\"/getstackuserquestionscount/\".concat(id",{"_index":716,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(\"/getstackuserreputation/\".concat(id",{"_index":531,"title":{},"body":{"injectables/ReputationService.html":{}}}],["this.http.get(\"/getstackusertags/\".concat(id",{"_index":614,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.http.get(\"/getstackusertoptags/\".concat(id)).map(toptag",{"_index":624,"title":{},"body":{"injectables/ToptagsService.html":{}}}],["this.http.get(\"/getstarsperlang/\".concat(usernam",{"_index":608,"title":{},"body":{"injectables/StarsService.html":{}}}],["this.http.get(\"/gettwitterfollowers/\".concat(handl",{"_index":685,"title":{},"body":{"injectables/TwitterrealService.html":{}}}],["this.http.get(\"/gettwitterfriends/\".concat(handl",{"_index":680,"title":{},"body":{"injectables/TwitterfollowersService.html":{}}}],["this.http.get(\"/gettwitteruser/\".concat(handl",{"_index":634,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this.http.get(\"/getwatchers/\".concat(usernam",{"_index":735,"title":{},"body":{"injectables/WatchersService.html":{}}}],["this.http.get('/getrepo/'.concat(usernam",{"_index":405,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.http.get('/getuser/'.concat(usernam",{"_index":402,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.isdataload",{"_index":668,"title":{},"body":{"components/TwitterfollowersComponent.html":{}}}],["this.isdataretriev",{"_index":699,"title":{},"body":{"components/TwitterrealfollowersComponent.html":{}}}],["this.issues_count",{"_index":454,"title":{},"body":{"components/IssuesComponent.html":{}}}],["this.issuesservice._get(this.username).subscribe(issu",{"_index":456,"title":{},"body":{"components/IssuesComponent.html":{}}}],["this.ment",{"_index":477,"title":{},"body":{"components/MentionsComponent.html":{}}}],["this.mentionsservice._get(\"4012073\").subscribe(ment",{"_index":479,"title":{},"body":{"components/MentionsComponent.html":{}}}],["this.mentionsservice._get(this.id).subscribe(ment",{"_index":484,"title":{},"body":{"components/MentionsComponent.html":{}}}],["this.mentionsservice._getfavorites(\"4012073\").subscribe(fav",{"_index":482,"title":{},"body":{"components/MentionsComponent.html":{}}}],["this.mentionsservice._getfavorites(this.id).subscribe(fav",{"_index":485,"title":{},"body":{"components/MentionsComponent.html":{}}}],["this.modalactions.emit({action:\"modal\",params:['clos",{"_index":346,"title":{},"body":{"components/ErrorComponent.html":{},"components/StackerrorComponent.html":{}}}],["this.modalactions.emit({action:\"modal\",params:['open",{"_index":345,"title":{},"body":{"components/ErrorComponent.html":{},"components/StackerrorComponent.html":{}}}],["this.opentaptarget",{"_index":438,"title":{},"body":{"components/HowtoComponent.html":{}}}],["this.organizations_count",{"_index":511,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["this.organizationsservice._get(this.username).subscribe(org",{"_index":512,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["this.realfollowers._get(\"katyperry\").subscribe((follow",{"_index":701,"title":{},"body":{"components/TwitterrealfollowersComponent.html":{}}}],["this.realfollowers._get(this.handle).subscribe((follow",{"_index":704,"title":{},"body":{"components/TwitterrealfollowersComponent.html":{}}}],["this.showhid",{"_index":436,"title":{},"body":{"components/HowtoComponent.html":{}}}],["this.stars._get(\"dasunpubudumal\").subscribe(star",{"_index":599,"title":{},"body":{"components/StarcountComponent.html":{}}}],["this.stars._get(this.username).subscribe(star",{"_index":603,"title":{},"body":{"components/StarcountComponent.html":{}}}],["this.taptargetactions.emit({action:\"taptarget\",params:[\"clos",{"_index":435,"title":{},"body":{"components/HowtoComponent.html":{}}}],["this.taptargetactions.emit({action:\"taptarget\",params:[\"open",{"_index":434,"title":{},"body":{"components/HowtoComponent.html":{}}}],["this.url",{"_index":310,"title":{},"body":{"components/ContributionschartComponent.html":{}}}],["this.usernam",{"_index":312,"title":{},"body":{"components/ContributionschartComponent.html":{}}}],["this.watch",{"_index":730,"title":{},"body":{"components/WatchersComponent.html":{}}}],["this.watcherservice._get(this.username).subscribe(watch",{"_index":731,"title":{},"body":{"components/WatchersComponent.html":{}}}],["time",{"_index":486,"title":{},"body":{"components/MentionsComponent.html":{}}}],["timeline'},{'nam",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["timeline/lib",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["titl",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/SearchComponent.html":{},"components/StarcountComponent.html":{}}}],["toggl",{"_index":414,"title":{},"body":{"components/HowtoComponent.html":{}}}],["top",{"_index":587,"title":{},"body":{"components/StarcountComponent.html":{}}}],["toptags'},{'nam",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["toptags.item",{"_index":625,"title":{},"body":{"injectables/ToptagsService.html":{}}}],["toptagscompon",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["toptagsservic",{"_index":617,"title":{"injectables/ToptagsService.html":{}},"body":{"injectables/ToptagsService.html":{}}}],["transform",{"_index":235,"title":{},"body":{"pipes/CapitalizeFirstPipe.html":{}}}],["transform(valu",{"_index":236,"title":{},"body":{"pipes/CapitalizeFirstPipe.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["true",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"components/HowtoComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"miscellaneous/variables.html":{}}}],["twitter'},{'nam",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["twittercompon",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["twitterdashboard",{"_index":636,"title":{},"body":{"components/TwitterdashboardComponent.html":{}}}],["twitterdashboard'},{'nam",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["twitterdashboard.component.css",{"_index":637,"title":{},"body":{"components/TwitterdashboardComponent.html":{}}}],["twitterdashboard.component.html",{"_index":638,"title":{},"body":{"components/TwitterdashboardComponent.html":{}}}],["twitterdashboardcompon",{"_index":91,"title":{"components/TwitterdashboardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["twitterfollow",{"_index":652,"title":{},"body":{"components/TwitterfollowersComponent.html":{}}}],["twitterfollowers'},{'nam",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["twitterfollowers.component.css",{"_index":653,"title":{},"body":{"components/TwitterfollowersComponent.html":{}}}],["twitterfollowers.component.html",{"_index":654,"title":{},"body":{"components/TwitterfollowersComponent.html":{}}}],["twitterfollowerscompon",{"_index":93,"title":{"components/TwitterfollowersComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["twitterfollowersservic",{"_index":651,"title":{"injectables/TwitterfollowersService.html":{}},"body":{"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{}}}],["twitterrealfollow",{"_index":687,"title":{},"body":{"components/TwitterrealfollowersComponent.html":{}}}],["twitterrealfollowers'},{'nam",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["twitterrealfollowers.component.css",{"_index":688,"title":{},"body":{"components/TwitterrealfollowersComponent.html":{}}}],["twitterrealfollowers.component.html",{"_index":689,"title":{},"body":{"components/TwitterrealfollowersComponent.html":{}}}],["twitterrealfollowerscompon",{"_index":95,"title":{"components/TwitterrealfollowersComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["twitterrealservic",{"_index":681,"title":{"injectables/TwitterrealService.html":{}},"body":{"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{}}}],["twitterservic",{"_index":626,"title":{"injectables/TwitterService.html":{}},"body":{"injectables/TwitterService.html":{}}}],["twittertimeline'},{'nam",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["twittertimelinecompon",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["twitterus",{"_index":632,"title":{},"body":{"injectables/TwitterService.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{}}}],["type",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"pipes/CapitalizeFirstPipe.html":{},"injectables/ChartService.html":{},"injectables/CommitsService.html":{},"components/ContributionschartComponent.html":{},"injectables/CountsService.html":{},"injectables/DataService.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"injectables/MentionsService.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"injectables/ReputationService.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"injectables/TagsService.html":{},"injectables/ToptagsService.html":{},"injectables/TwitterService.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/TwitterrealService.html":{},"components/TwitterrealfollowersComponent.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":802,"title":{},"body":{"index.html":{}}}],["up",{"_index":622,"title":{},"body":{"injectables/ToptagsService.html":{}}}],["url",{"_index":303,"title":{},"body":{"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/StackerrorComponent.html":{}}}],["us",{"_index":792,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"components/ErrorComponent.html":{},"injectables/GithubService.html":{},"components/IssuesComponent.html":{},"components/OrganizationsComponent.html":{},"components/StackerrorComponent.html":{},"injectables/TwitterService.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"injectables/TwitterfollowersService.html":{},"injectables/UserService.html":{},"components/WatchersComponent.html":{}}}],["user.followerscount",{"_index":643,"title":{},"body":{"components/TwitterdashboardComponent.html":{}}}],["user.friendscount",{"_index":649,"title":{},"body":{"components/TwitterdashboardComponent.html":{}}}],["user.statusescount",{"_index":646,"title":{},"body":{"components/TwitterdashboardComponent.html":{}}}],["usernam",{"_index":293,"title":{},"body":{"injectables/CommitsService.html":{},"components/ContributionschartComponent.html":{},"injectables/CountsService.html":{},"components/ErrorComponent.html":{},"injectables/ForksService.html":{},"injectables/GithubService.html":{},"components/IssuesComponent.html":{},"injectables/IssuesService.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"injectables/OrganizationsService.html":{},"components/StarcountComponent.html":{},"injectables/StarsService.html":{},"components/WatchersComponent.html":{},"injectables/WatchersService.html":{}}}],["username/id/handl",{"_index":426,"title":{},"body":{"components/HowtoComponent.html":{}}}],["userservic",{"_index":705,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{}}}],["valu",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"pipes/CapitalizeFirstPipe.html":{},"components/ErrorComponent.html":{},"components/HowtoComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"miscellaneous/variables.html":{}}}],["value.charat(0).touppercas",{"_index":244,"title":{},"body":{"pipes/CapitalizeFirstPipe.html":{}}}],["value.slice(1",{"_index":245,"title":{},"body":{"pipes/CapitalizeFirstPipe.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["variabl",{"_index":821,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":778,"title":{},"body":{"index.html":{}}}],["via",{"_index":562,"title":{},"body":{"components/StackerrorComponent.html":{},"index.html":{}}}],["viewchild",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["wait",{"_index":429,"title":{},"body":{"components/HowtoComponent.html":{}}}],["watcher",{"_index":720,"title":{},"body":{"components/WatchersComponent.html":{},"injectables/WatchersService.html":{}}}],["watchers'},{'nam",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["watchers.component.css",{"_index":721,"title":{},"body":{"components/WatchersComponent.html":{}}}],["watchers.component.html",{"_index":722,"title":{},"body":{"components/WatchersComponent.html":{}}}],["watcherscompon",{"_index":99,"title":{"components/WatchersComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["watcherservic",{"_index":725,"title":{},"body":{"components/WatchersComponent.html":{}}}],["watchersservic",{"_index":719,"title":{"injectables/WatchersService.html":{}},"body":{"components/WatchersComponent.html":{},"injectables/WatchersService.html":{}}}],["way",{"_index":370,"title":{},"body":{"components/FooterComponent.html":{}}}],["word",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["wordcloud",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{}}}],["wordcloudcompon",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContributionschartComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HowtoComponent.html":{},"components/IssuesComponent.html":{},"components/MentionsComponent.html":{},"components/OrganizationsComponent.html":{},"components/PreloaderComponent.html":{},"components/SearchComponent.html":{},"components/StackerrorComponent.html":{},"components/StarcountComponent.html":{},"components/TwitterdashboardComponent.html":{},"components/TwitterfollowersComponent.html":{},"components/TwitterrealfollowersComponent.html":{},"components/WatchersComponent.html":{},"overview.html":{}}}],["worker",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.j",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["zone.j",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/github/about/about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                about.component.css\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/github/about/about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/github/about/about.component.ts:12\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Title\n    A bunch of text\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Title    A bunch of text  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'CommitsComponent', 'selector': 'app-commits'},{'name': 'ContributionschartComponent', 'selector': 'app-contributionschart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForksComponent', 'selector': 'app-forks'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'HowtoComponent', 'selector': 'app-howto'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'MentionsComponent', 'selector': 'app-mentions'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PreloaderComponent', 'selector': 'app-preloader'},{'name': 'ReputationComponent', 'selector': 'app-reputation'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StackerrorComponent', 'selector': 'app-stackerror'},{'name': 'StackoverflowComponent', 'selector': 'app-stackoverflow'},{'name': 'StarcountComponent', 'selector': 'app-starcount'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TempComponent', 'selector': 'ng4-twitter-timeline'},{'name': 'ToptagsComponent', 'selector': 'app-toptags'},{'name': 'TwitterComponent', 'selector': 'app-twitter'},{'name': 'TwitterdashboardComponent', 'selector': 'app-twitterdashboard'},{'name': 'TwitterfollowersComponent', 'selector': 'app-twitterfollowers'},{'name': 'TwitterrealfollowersComponent', 'selector': 'app-twitterrealfollowers'},{'name': 'TwittertimelineComponent', 'selector': 'app-twittertimeline'},{'name': 'WatchersComponent', 'selector': 'app-watchers'},{'name': 'WordcloudComponent', 'selector': 'app-wordcloud'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            HttpClient\n                \n            \n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { User } from './components/models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [HttpClient]\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n    \n\n    \n        \n\n  \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'CommitsComponent', 'selector': 'app-commits'},{'name': 'ContributionschartComponent', 'selector': 'app-contributionschart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForksComponent', 'selector': 'app-forks'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'HowtoComponent', 'selector': 'app-howto'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'MentionsComponent', 'selector': 'app-mentions'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PreloaderComponent', 'selector': 'app-preloader'},{'name': 'ReputationComponent', 'selector': 'app-reputation'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StackerrorComponent', 'selector': 'app-stackerror'},{'name': 'StackoverflowComponent', 'selector': 'app-stackoverflow'},{'name': 'StarcountComponent', 'selector': 'app-starcount'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TempComponent', 'selector': 'ng4-twitter-timeline'},{'name': 'ToptagsComponent', 'selector': 'app-toptags'},{'name': 'TwitterComponent', 'selector': 'app-twitter'},{'name': 'TwitterdashboardComponent', 'selector': 'app-twitterdashboard'},{'name': 'TwitterfollowersComponent', 'selector': 'app-twitterfollowers'},{'name': 'TwitterrealfollowersComponent', 'selector': 'app-twitterrealfollowers'},{'name': 'TwittertimelineComponent', 'selector': 'app-twittertimeline'},{'name': 'WatchersComponent', 'selector': 'app-watchers'},{'name': 'WordcloudComponent', 'selector': 'app-wordcloud'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_AppComponent_providers\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGithubComponent\n\nGithubComponent\n\nAppModule -->\n\nGithubComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nChartComponent\n\nChartComponent\n\nAppModule -->\n\nChartComponent->AppModule\n\n\n\n\n\nStackoverflowComponent\n\nStackoverflowComponent\n\nAppModule -->\n\nStackoverflowComponent->AppModule\n\n\n\n\n\nTwitterComponent\n\nTwitterComponent\n\nAppModule -->\n\nTwitterComponent->AppModule\n\n\n\n\n\nAboutComponent\n\nAboutComponent\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nHowtoComponent\n\nHowtoComponent\n\nAppModule -->\n\nHowtoComponent->AppModule\n\n\n\n\n\nCommitsComponent\n\nCommitsComponent\n\nAppModule -->\n\nCommitsComponent->AppModule\n\n\n\n\n\nPreloaderComponent\n\nPreloaderComponent\n\nAppModule -->\n\nPreloaderComponent->AppModule\n\n\n\n\n\nContributionschartComponent\n\nContributionschartComponent\n\nAppModule -->\n\nContributionschartComponent->AppModule\n\n\n\n\n\nStarcountComponent\n\nStarcountComponent\n\nAppModule -->\n\nStarcountComponent->AppModule\n\n\n\n\n\nForksComponent\n\nForksComponent\n\nAppModule -->\n\nForksComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nWatchersComponent\n\nWatchersComponent\n\nAppModule -->\n\nWatchersComponent->AppModule\n\n\n\n\n\nIssuesComponent\n\nIssuesComponent\n\nAppModule -->\n\nIssuesComponent->AppModule\n\n\n\n\n\nOrganizationsComponent\n\nOrganizationsComponent\n\nAppModule -->\n\nOrganizationsComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nTagsComponent\n\nTagsComponent\n\nAppModule -->\n\nTagsComponent->AppModule\n\n\n\n\n\nMentionsComponent\n\nMentionsComponent\n\nAppModule -->\n\nMentionsComponent->AppModule\n\n\n\n\n\nWordcloudComponent\n\nWordcloudComponent\n\nAppModule -->\n\nWordcloudComponent->AppModule\n\n\n\n\n\nToptagsComponent\n\nToptagsComponent\n\nAppModule -->\n\nToptagsComponent->AppModule\n\n\n\n\n\nCapitalizeFirstPipe\n\nCapitalizeFirstPipe\n\nAppModule -->\n\nCapitalizeFirstPipe->AppModule\n\n\n\n\n\nReputationComponent\n\nReputationComponent\n\nAppModule -->\n\nReputationComponent->AppModule\n\n\n\n\n\nStackerrorComponent\n\nStackerrorComponent\n\nAppModule -->\n\nStackerrorComponent->AppModule\n\n\n\n\n\nTwitterdashboardComponent\n\nTwitterdashboardComponent\n\nAppModule -->\n\nTwitterdashboardComponent->AppModule\n\n\n\n\n\nTwittertimelineComponent\n\nTwittertimelineComponent\n\nAppModule -->\n\nTwittertimelineComponent->AppModule\n\n\n\n\n\nTwitterfollowersComponent\n\nTwitterfollowersComponent\n\nAppModule -->\n\nTwitterfollowersComponent->AppModule\n\n\n\n\n\nTwitterrealfollowersComponent\n\nTwitterrealfollowersComponent\n\nAppModule -->\n\nTwitterrealfollowersComponent->AppModule\n\n\n\n\n\nTempComponent\n\nTempComponent\n\nAppModule -->\n\nTempComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nHttpClient\n\nHttpClient\n\nAppComponent -->\n\nHttpClient->AppComponent\n\n\n\n\n\nGithubService\n\nGithubService\n\nAppModule -->\n\nGithubService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                GithubComponent\n                            \n                            \n                                SearchComponent\n                            \n                            \n                                ChartComponent\n                            \n                            \n                                StackoverflowComponent\n                            \n                            \n                                TwitterComponent\n                            \n                            \n                                AboutComponent\n                            \n                            \n                                HowtoComponent\n                            \n                            \n                                CommitsComponent\n                            \n                            \n                                PreloaderComponent\n                            \n                            \n                                ContributionschartComponent\n                            \n                            \n                                StarcountComponent\n                            \n                            \n                                ForksComponent\n                            \n                            \n                                FooterComponent\n                            \n                            \n                                WatchersComponent\n                            \n                            \n                                IssuesComponent\n                            \n                            \n                                OrganizationsComponent\n                            \n                            \n                                DashboardComponent\n                            \n                            \n                                ErrorComponent\n                            \n                            \n                                TagsComponent\n                            \n                            \n                                MentionsComponent\n                            \n                            \n                                WordcloudComponent\n                            \n                            \n                                ToptagsComponent\n                            \n                            \n                                CapitalizeFirstPipe\n                            \n                            \n                                ReputationComponent\n                            \n                            \n                                StackerrorComponent\n                            \n                            \n                                TwitterdashboardComponent\n                            \n                            \n                                TwittertimelineComponent\n                            \n                            \n                                TwitterfollowersComponent\n                            \n                            \n                                TwitterrealfollowersComponent\n                            \n                            \n                                TempComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     GithubService\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Schemas\n                    \n                            \n                                CUSTOM_ELEMENTS_SCHEMA\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { GithubComponent } from './components/github/github.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AutofocusModule } from \"angular-autofocus-fix\";\nimport { ChartsModule } from 'ng2-charts';\nimport { GithubService } from './services/github/gihubservice.service';\nimport {RouteReuseStrategy, RouterModule} from '@angular/router';\nimport { SearchComponent } from './components/search/search.component';\nimport { ChartComponent } from './components/github/chart/chart.component';\nimport { StackoverflowComponent } from './components/stackoverflow/stackoverflow.component';\nimport { TwitterComponent } from './components/twitter/twitter.component';\nimport { AboutComponent } from './components/github/about/about.component';\nimport { HowtoComponent } from './components/github/howto/howto.component';\nimport {MaterializeModule} from \"angular2-materialize\";\nimport { CommitsComponent } from './components/github/commits/commits.component';\nimport {Ng4LoadingSpinnerModule} from \"ng4-loading-spinner\";\nimport { PreloaderComponent } from './components/preloader/preloader.component';\nimport { ContributionschartComponent } from './components/github/contributionschart/contributionschart.component';\nimport {Customreuse} from \"./strategies/customreuse\";\nimport {StarsService} from \"./services/github/stars.service\";\nimport { StarcountComponent } from './components/github/starcount/starcount.component';\nimport { ForksComponent } from './components/github/forks/forks.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { WatchersComponent } from './components/github/watchers/watchers.component';\nimport { IssuesComponent } from './components/github/issues/issues.component';\nimport { OrganizationsComponent } from './components/github/organizations/organizations.component';\nimport { DashboardComponent } from './components/stackoverflow/dashboard/dashboard.component';\nimport { ErrorComponent } from './components/github/error/error.component';\nimport { TagsComponent } from './components/stackoverflow/tags/tags.component';\nimport {ServiceWorkerModule} from \"@angular/service-worker\";\nimport {environment} from \"../environments/environment\";\nimport { MentionsComponent } from './components/stackoverflow/mentions/mentions.component';\nimport {AgWordCloudModule} from \"angular4-word-cloud\";\nimport { WordcloudComponent } from './components/stackoverflow/wordcloud/wordcloud.component';\nimport { ToptagsComponent } from './components/stackoverflow/toptags/toptags.component';\nimport {CapitalizeFirstPipe} from \"./pipes/capitalize.pipe\";\nimport { ReputationComponent } from './components/stackoverflow/reputation/reputation.component';\nimport {RouterTestingModule} from '@angular/router/testing';\nimport { StackerrorComponent } from './components/stackoverflow/stackerror/stackerror.component';\nimport { TwitterdashboardComponent } from './components/twitter/twitterdashboard/twitterdashboard.component';\nimport { TwittertimelineComponent } from './components/twitter/twittertimeline/twittertimeline.component'\n// import {Ng4TwitterTimelineModule} from \"ng4-twitter-timeline/lib\";\nimport { TwitterfollowersComponent } from './components/twitter/twitterfollowers/twitterfollowers.component';\nimport { TwitterrealfollowersComponent } from './components/twitter/twitterrealfollowers/twitterrealfollowers.component';\nimport { TempComponent } from './components/twitter/temp/temp.component';\nimport {AsyncLocalStorageModule} from \"angular-async-local-storage\";\n\nconst appRoutes = [\n  {\n    path: 'github',\n    component: GithubComponent,\n    data: {shouldDetach: true}\n  },\n  {\n    path: '',\n    component: StackoverflowComponent,\n    data: {shouldDetach: true}\n  },\n  {\n    path: 'twitter',\n    component: TwitterComponent,\n    data: {shouldDetach: false}\n  },\n  {\n    path: 'about',\n    component: AboutComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GithubComponent,\n    SearchComponent,\n    ChartComponent,\n    StackoverflowComponent,\n    TwitterComponent,\n    AboutComponent,\n    HowtoComponent,\n    CommitsComponent,\n    PreloaderComponent,\n    ContributionschartComponent,\n    StarcountComponent,\n    ForksComponent,\n    FooterComponent,\n    WatchersComponent,\n    IssuesComponent,\n    OrganizationsComponent,\n    DashboardComponent,\n    ErrorComponent,\n    TagsComponent,\n    MentionsComponent,\n    WordcloudComponent,\n    ToptagsComponent,\n    CapitalizeFirstPipe,\n    ReputationComponent,\n    StackerrorComponent,\n    TwitterdashboardComponent,\n    TwittertimelineComponent,\n    TwitterfollowersComponent,\n    TwitterrealfollowersComponent,\n    TempComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ChartsModule,\n    AutofocusModule,\n    MaterializeModule,\n    AsyncLocalStorageModule,\n    Ng4LoadingSpinnerModule.forRoot(),\n    RouterModule.forRoot(appRoutes),\n    AgWordCloudModule.forRoot(),\n    ServiceWorkerModule.register('/ngsw-worker.js', {enabled: environment.production}),\n    RouterTestingModule,\n    // Ng4TwitterTimelineModule\n  ],\n  providers: [GithubService, {provide: RouteReuseStrategy, useClass: Customreuse}],\n  bootstrap: [AppComponent],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CapitalizeFirstPipe.html":{"url":"pipes/CapitalizeFirstPipe.html","title":"pipe - CapitalizeFirstPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  CapitalizeFirstPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/capitalize.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        capitalizeFirst\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string, args: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/capitalize.pipe.ts:8\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'capitalizeFirst'\n})\n\nexport class CapitalizeFirstPipe implements PipeTransform {\n  transform(value: string, args: any[]): string {\n    if (value === null) return 'Not assigned';\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChartService.html":{"url":"injectables/ChartService.html","title":"injectable - ChartService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ChartService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/github/chart.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartData\n                            \n                            \n                                    Private\n                                chartLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getLabelsData\n                            \n                            \n                                    Public\n                                getRepoCounts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/github/chart.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLabelsData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLabelsData(array: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/github/chart.service.ts:15\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getRepoCounts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRepoCounts(array: any[], labelArray: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/github/chart.service.ts:30\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        labelArray\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            chartData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartData:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/github/chart.service.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            chartLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartLabels:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/github/chart.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {User} from \"../../components/models/user\";\n\n@Injectable()\nexport class ChartService {\n\n  private chartData: any[];\n  private chartLabels: any[];\n\n  constructor() {\n    this.chartData = [];\n    this.chartLabels = [];\n  }\n\n  public getLabelsData(array: any[]) : any[] {\n\n    this.chartLabels = [];\n\n    // Create an array of chart labels\n    for(let repo of array) {\n      this.chartLabels.push(repo.language);\n    }\n\n    return this.chartLabels.filter((elem, index, self) => {\n      return index === self.indexOf(elem);\n    });\n\n  }\n\n  public getRepoCounts(array: any[], labelArray: any[]) : any[] {\n\n    let count = 0;\n    this.chartData = [];\n\n    for(let lang of labelArray){\n      for(let repo of array) {\n        if (repo.language == lang) {\n          count++;\n        }\n      }\n      this.chartData.push(count);\n      count = 0;\n    }\n\n    return this.chartData;\n\n  }\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommitsService.html":{"url":"injectables/CommitsService.html","title":"injectable - CommitsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CommitsService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/github/commits.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                extractChartData\n                            \n                            \n                                    Public\n                                extractChartLabels\n                            \n                            \n                                    Public\n                                getCommitDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/github/commits.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            extractChartData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        extractChartData(chartDetails: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/github/commits.service.ts:19\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chartDetails\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            extractChartLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        extractChartLabels(chartDetails: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/github/commits.service.ts:15\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chartDetails\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getCommitDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCommitDetails(username: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/github/commits.service.ts:10\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable()\nexport class CommitsService {\n\n\n  constructor(protected http: HttpClient) {}\n\n  public getCommitDetails(username: string) {\n    return this.http.get(\"/getcommitsadapterRe/\".concat(username))\n      .map(data => data);\n  }\n\n  public extractChartLabels(chartDetails: any): any[] {\n    return Object.keys(chartDetails);\n  }\n\n  public extractChartData(chartDetails: any): any[] {\n    return Object.values(chartDetails);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContributionschartComponent.html":{"url":"components/ContributionschartComponent.html","title":"component - ContributionschartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContributionschartComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/github/contributionschart/contributionschart.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contributionschart\n            \n\n            \n                styleUrls\n                contributionschart.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contributionschart.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/github/contributionschart/contributionschart.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        username\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/github/contributionschart/contributionschart.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/github/contributionschart/contributionschart.component.ts:20\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/github/contributionschart/contributionschart.component.ts:17\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        URL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/github/contributionschart/contributionschart.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-contributionschart',\n  templateUrl: './contributionschart.component.html',\n  styleUrls: ['./contributionschart.component.css']\n})\nexport class ContributionschartComponent implements OnInit {\n\n  @Input() username: string;\n  URL: string;\n\n  constructor() {\n    this.URL = \"//ghchart.rshah.org/\" + this.username;\n  }\n\n  ngOnInit() {\n  }\n\n  public _get() {\n    this.URL = \"//ghchart.rshah.org/\" + this.username;\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'CommitsComponent', 'selector': 'app-commits'},{'name': 'ContributionschartComponent', 'selector': 'app-contributionschart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForksComponent', 'selector': 'app-forks'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'HowtoComponent', 'selector': 'app-howto'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'MentionsComponent', 'selector': 'app-mentions'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PreloaderComponent', 'selector': 'app-preloader'},{'name': 'ReputationComponent', 'selector': 'app-reputation'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StackerrorComponent', 'selector': 'app-stackerror'},{'name': 'StackoverflowComponent', 'selector': 'app-stackoverflow'},{'name': 'StarcountComponent', 'selector': 'app-starcount'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TempComponent', 'selector': 'ng4-twitter-timeline'},{'name': 'ToptagsComponent', 'selector': 'app-toptags'},{'name': 'TwitterComponent', 'selector': 'app-twitter'},{'name': 'TwitterdashboardComponent', 'selector': 'app-twitterdashboard'},{'name': 'TwitterfollowersComponent', 'selector': 'app-twitterfollowers'},{'name': 'TwitterrealfollowersComponent', 'selector': 'app-twitterrealfollowers'},{'name': 'TwittertimelineComponent', 'selector': 'app-twittertimeline'},{'name': 'WatchersComponent', 'selector': 'app-watchers'},{'name': 'WordcloudComponent', 'selector': 'app-wordcloud'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContributionschartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CountsService.html":{"url":"injectables/CountsService.html","title":"injectable - CountsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CountsService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/github/counts.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCounts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/github/counts.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getCounts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCounts(username: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/github/counts.service.ts:9\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable()\nexport class CountsService {\n\n  constructor(protected http: HttpClient) { }\n\n  public getCounts(username: string) {\n    return this.http.get(\"/getcounts/\".concat(username), {headers: {}}).map(counts => counts);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/github/data.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                array\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                replace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/github/data.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            replace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        replace(data: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/github/data.service.ts:11\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            array\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        array:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/github/data.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class DataService {\n\n  array: any[];\n\n  constructor() { }\n\n  public replace(data: any[]) : any[] {\n\n\n\n    return this.array;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/github/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n            \n                styleUrls\n                error.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalActions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/github/error/error.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/github/error/error.component.ts:22\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/github/error/error.component.ts:15\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/github/error/error.component.ts:18\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/github/error/error.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, OnInit} from '@angular/core';\nimport {MaterializeAction} from \"angular2-materialize\";\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  modalActions = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  openModal(){\n    this.modalActions.emit({action:\"modal\",params:['open']});\n  }\n\n  closeModal() {\n    this.modalActions.emit({action:\"modal\",params:['close']});\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    help  ERROR!\n    You have entered an invalid Github username. GitHub usernames can be identified by the URL for the users' GitHub profile.\n    \n    For an example,\n    \n    https://github.com/dasunpubudumal suggests that the users' username is dasunpubudumal.\n  \n  \n    Okay\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      help  ERROR!    You have entered an invalid Github username. GitHub usernames can be identified by the URL for the users\\' GitHub profile.        For an example,        https://github.com/dasunpubudumal suggests that the users\\' username is dasunpubudumal.        Okay  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'CommitsComponent', 'selector': 'app-commits'},{'name': 'ContributionschartComponent', 'selector': 'app-contributionschart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForksComponent', 'selector': 'app-forks'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'HowtoComponent', 'selector': 'app-howto'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'MentionsComponent', 'selector': 'app-mentions'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PreloaderComponent', 'selector': 'app-preloader'},{'name': 'ReputationComponent', 'selector': 'app-reputation'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StackerrorComponent', 'selector': 'app-stackerror'},{'name': 'StackoverflowComponent', 'selector': 'app-stackoverflow'},{'name': 'StarcountComponent', 'selector': 'app-starcount'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TempComponent', 'selector': 'ng4-twitter-timeline'},{'name': 'ToptagsComponent', 'selector': 'app-toptags'},{'name': 'TwitterComponent', 'selector': 'app-twitter'},{'name': 'TwitterdashboardComponent', 'selector': 'app-twitterdashboard'},{'name': 'TwitterfollowersComponent', 'selector': 'app-twitterfollowers'},{'name': 'TwitterrealfollowersComponent', 'selector': 'app-twitterrealfollowers'},{'name': 'TwittertimelineComponent', 'selector': 'app-twittertimeline'},{'name': 'WatchersComponent', 'selector': 'app-watchers'},{'name': 'WordcloudComponent', 'selector': 'app-wordcloud'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/footer/footer.component.ts:12\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      Developer Statistics for Decision Making\n      Faster, easier, and reliable way of getting developer information in one portal for the decision making purposes for your organization.\n    \n    \n      Related links about the project\n      \n        Github Repository\n      \n    \n  \n\n\n  \n    Crystal IT Dasun Pubudumal\n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Developer Statistics for Decision Making      Faster, easier, and reliable way of getting developer information in one portal for the decision making purposes for your organization.              Related links about the project              Github Repository                  Crystal IT Dasun Pubudumal      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'CommitsComponent', 'selector': 'app-commits'},{'name': 'ContributionschartComponent', 'selector': 'app-contributionschart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForksComponent', 'selector': 'app-forks'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'HowtoComponent', 'selector': 'app-howto'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'MentionsComponent', 'selector': 'app-mentions'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PreloaderComponent', 'selector': 'app-preloader'},{'name': 'ReputationComponent', 'selector': 'app-reputation'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StackerrorComponent', 'selector': 'app-stackerror'},{'name': 'StackoverflowComponent', 'selector': 'app-stackoverflow'},{'name': 'StarcountComponent', 'selector': 'app-starcount'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TempComponent', 'selector': 'ng4-twitter-timeline'},{'name': 'ToptagsComponent', 'selector': 'app-toptags'},{'name': 'TwitterComponent', 'selector': 'app-twitter'},{'name': 'TwitterdashboardComponent', 'selector': 'app-twitterdashboard'},{'name': 'TwitterfollowersComponent', 'selector': 'app-twitterfollowers'},{'name': 'TwitterrealfollowersComponent', 'selector': 'app-twitterrealfollowers'},{'name': 'TwittertimelineComponent', 'selector': 'app-twittertimeline'},{'name': 'WatchersComponent', 'selector': 'app-watchers'},{'name': 'WordcloudComponent', 'selector': 'app-wordcloud'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ForksService.html":{"url":"injectables/ForksService.html","title":"injectable - ForksService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ForksService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/github/forks.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/github/forks.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get(username: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/github/forks.service.ts:9\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable()\nexport class ForksService {\n\n  constructor(protected http: HttpClient) { }\n\n  public _get(username: string) {\n    return this.http.get(\"/getforks/\".concat(username))\n      .map(forks => forks);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubService.html":{"url":"injectables/GithubService.html","title":"injectable - GithubService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GithubService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/github/gihubservice.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                call\n                            \n                            \n                                callRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/github/gihubservice.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            call\n                            \n                            \n                        \n                    \n                \n                \n                    \ncall(username: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/github/gihubservice.service.ts:12\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            callRepo\n                            \n                            \n                        \n                    \n                \n                \n                    \ncallRepo(username: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/github/gihubservice.service.ts:17\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {User} from '../../components/models/user';\nimport 'rxjs/add/operator/map';\n\n\n@Injectable()\nexport class GithubService {\n\n  constructor(protected http: HttpClient) {}\n\n  call(username: string) {\n    return this.http.get('/getuser/'.concat(username),\n      {headers: {}}). map(res => res);\n  }\n\n  callRepo(username: string) {\n    return this.http.get('/getrepo/'.concat(username))\n      .map(res => res);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HowtoComponent.html":{"url":"components/HowtoComponent.html","title":"component - HowtoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HowtoComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/github/howto/howto.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-howto\n            \n\n            \n                styleUrls\n                howto.component.css\n            \n\n\n\n            \n                templateUrl\n                ./howto.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                showHide\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeTapTarget\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openTapTarget\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                tapTargetActions\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/github/howto/howto.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        tapTargetActions\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/github/howto/howto.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeTapTarget\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseTapTarget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/github/howto/howto.component.ts:23\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/github/howto/howto.component.ts:18\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openTapTarget\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenTapTarget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/github/howto/howto.component.ts:20\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/github/howto/howto.component.ts:27\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            showHide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showHide:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/github/howto/howto.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        text:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Enter the developer's username/ID/handle. Since the search is interactive, you might have to wait a little while to get the data depending on the internet connection.\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/github/howto/howto.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-howto',\n  templateUrl: './howto.component.html',\n  styleUrls: ['./howto.component.css']\n})\nexport class HowtoComponent implements OnInit {\n\n  text: string = \"Enter the developer's username/ID/handle. Since the search is interactive, you might have to wait a little while to get the data depending on the internet connection.\";\n\n  protected showHide: boolean = false;\n\n  constructor() { }\n\n  @Output() tapTargetActions: EventEmitter = new EventEmitter();\n\n  ngOnInit() {}\n\n  openTapTarget() {\n    this.tapTargetActions.emit({action:\"tapTarget\",params:[\"open\"]});\n  }\n  closeTapTarget() {\n    this.tapTargetActions.emit({action:\"tapTarget\",params:[\"close\"]});\n  }\n\n  toggle() {\n    this.showHide = false;\n    if(!this.showHide) {\n      this.openTapTarget();\n      this.showHide = true;\n    } else {\n      this.closeTapTarget();\n      this.showHide = false;\n    }\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    info_outline\n  \n\n\n\n  \n    \n      {{text}}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      info_outline              {{text}}      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'CommitsComponent', 'selector': 'app-commits'},{'name': 'ContributionschartComponent', 'selector': 'app-contributionschart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForksComponent', 'selector': 'app-forks'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'HowtoComponent', 'selector': 'app-howto'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'MentionsComponent', 'selector': 'app-mentions'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PreloaderComponent', 'selector': 'app-preloader'},{'name': 'ReputationComponent', 'selector': 'app-reputation'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StackerrorComponent', 'selector': 'app-stackerror'},{'name': 'StackoverflowComponent', 'selector': 'app-stackoverflow'},{'name': 'StarcountComponent', 'selector': 'app-starcount'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TempComponent', 'selector': 'ng4-twitter-timeline'},{'name': 'ToptagsComponent', 'selector': 'app-toptags'},{'name': 'TwitterComponent', 'selector': 'app-twitter'},{'name': 'TwitterdashboardComponent', 'selector': 'app-twitterdashboard'},{'name': 'TwitterfollowersComponent', 'selector': 'app-twitterfollowers'},{'name': 'TwitterrealfollowersComponent', 'selector': 'app-twitterrealfollowers'},{'name': 'TwittertimelineComponent', 'selector': 'app-twittertimeline'},{'name': 'WatchersComponent', 'selector': 'app-watchers'},{'name': 'WordcloudComponent', 'selector': 'app-wordcloud'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HowtoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssuesComponent.html":{"url":"components/IssuesComponent.html","title":"component - IssuesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssuesComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/github/issues/issues.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            IssuesService\n                \n            \n\n\n            \n                selector\n                app-issues\n            \n\n            \n                styleUrls\n                issues.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issues.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                issues_count\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(issuesService: IssuesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/github/issues/issues.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    issuesService\n                                                  \n                                                        \n                                                                    IssuesService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        username\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/github/issues/issues.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/github/issues/issues.component.ts:23\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/github/issues/issues.component.ts:19\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issues_count\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issues_count:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/github/issues/issues.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {IssuesService} from \"../../../services/github/issues.service\";\n\n@Component({\n  selector: 'app-issues',\n  templateUrl: './issues.component.html',\n  styleUrls: ['./issues.component.css'],\n  providers: [IssuesService]\n})\nexport class IssuesComponent implements OnInit {\n\n  @Input() username: string;\n  issues_count: number;\n\n  constructor(protected issuesService: IssuesService) {\n    this.issues_count = 0;\n  }\n\n  ngOnInit() {\n    this._get();\n  }\n\n  public _get() {\n    this.issuesService._get(this.username).subscribe(issues => {\n      this.issues_count = issues;\n    });\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    Repos with Issues\n  \n  \n    \n      No of Issues\n    \n  \n  \n    This user has {{issues_count}} repositories with issues.\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Repos with Issues              No of Issues            This user has {{issues_count}} repositories with issues.  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'CommitsComponent', 'selector': 'app-commits'},{'name': 'ContributionschartComponent', 'selector': 'app-contributionschart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForksComponent', 'selector': 'app-forks'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'HowtoComponent', 'selector': 'app-howto'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'MentionsComponent', 'selector': 'app-mentions'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PreloaderComponent', 'selector': 'app-preloader'},{'name': 'ReputationComponent', 'selector': 'app-reputation'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StackerrorComponent', 'selector': 'app-stackerror'},{'name': 'StackoverflowComponent', 'selector': 'app-stackoverflow'},{'name': 'StarcountComponent', 'selector': 'app-starcount'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TempComponent', 'selector': 'ng4-twitter-timeline'},{'name': 'ToptagsComponent', 'selector': 'app-toptags'},{'name': 'TwitterComponent', 'selector': 'app-twitter'},{'name': 'TwitterdashboardComponent', 'selector': 'app-twitterdashboard'},{'name': 'TwitterfollowersComponent', 'selector': 'app-twitterfollowers'},{'name': 'TwitterrealfollowersComponent', 'selector': 'app-twitterrealfollowers'},{'name': 'TwittertimelineComponent', 'selector': 'app-twittertimeline'},{'name': 'WatchersComponent', 'selector': 'app-watchers'},{'name': 'WordcloudComponent', 'selector': 'app-wordcloud'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssuesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssuesService.html":{"url":"injectables/IssuesService.html","title":"injectable - IssuesService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  IssuesService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/github/issues.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/github/issues.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get(username: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/github/issues.service.ts:9\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable()\nexport class IssuesService {\n\n  constructor(protected http: HttpClient) { }\n\n  public _get(username: string) {\n    return this.http.get(\"/getissues/\".concat(username))\n      .map(issues => issues);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MentionsComponent.html":{"url":"components/MentionsComponent.html","title":"component - MentionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MentionsComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/stackoverflow/mentions/mentions.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MentionsService\n                \n            \n\n\n            \n                selector\n                app-mentions\n            \n\n            \n                styleUrls\n                mentions.component.css\n            \n\n\n\n            \n                templateUrl\n                ./mentions.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fav\n                            \n                            \n                                mentions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mentionsService: MentionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/stackoverflow/mentions/mentions.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    mentionsService\n                                                  \n                                                        \n                                                                    MentionsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/stackoverflow/mentions/mentions.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/stackoverflow/mentions/mentions.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/stackoverflow/mentions/mentions.component.ts:33\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/stackoverflow/mentions/mentions.component.ts:30\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fav:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/stackoverflow/mentions/mentions.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mentions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mentions:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/stackoverflow/mentions/mentions.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {MentionsService} from \"../../../services/stack/mentions.service\";\n\n@Component({\n  selector: 'app-mentions',\n  templateUrl: './mentions.component.html',\n  styleUrls: ['./mentions.component.css'],\n  providers: [MentionsService]\n})\nexport class MentionsComponent implements OnInit {\n\n  @Input() id: string\n  @Input() username: string;\n  mentions: number;\n  fav: number;\n\n  constructor(protected mentionsService: MentionsService) {\n    this.mentions = 0;\n    this.fav = 0;\n    this.mentionsService._get(\"4012073\").subscribe(mentions => {\n      console.log(mentions.total);\n      this.mentions = mentions.total;\n    });\n    this.mentionsService._getFavorites(\"4012073\").subscribe(fav => {\n      this.fav = fav.total;\n    })\n\n  }\n\n  ngOnInit() {\n  }\n\n  public _get() {\n    this.mentionsService._get(this.id).subscribe(mentions => {\n      this.mentions = mentions.total;\n    });\n\n    this.mentionsService._getFavorites(this.id).subscribe(fav => {\n      this.fav = fav.total;\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n     {{username}} was mentioned {{mentions}}  times.\n  \n\n\n\n  \n     {{username}} has  {{fav}}  favorite questions.\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{username}} was mentioned {{mentions}}  times.         {{username}} has  {{fav}}  favorite questions.  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'CommitsComponent', 'selector': 'app-commits'},{'name': 'ContributionschartComponent', 'selector': 'app-contributionschart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForksComponent', 'selector': 'app-forks'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'HowtoComponent', 'selector': 'app-howto'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'MentionsComponent', 'selector': 'app-mentions'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PreloaderComponent', 'selector': 'app-preloader'},{'name': 'ReputationComponent', 'selector': 'app-reputation'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StackerrorComponent', 'selector': 'app-stackerror'},{'name': 'StackoverflowComponent', 'selector': 'app-stackoverflow'},{'name': 'StarcountComponent', 'selector': 'app-starcount'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TempComponent', 'selector': 'ng4-twitter-timeline'},{'name': 'ToptagsComponent', 'selector': 'app-toptags'},{'name': 'TwitterComponent', 'selector': 'app-twitter'},{'name': 'TwitterdashboardComponent', 'selector': 'app-twitterdashboard'},{'name': 'TwitterfollowersComponent', 'selector': 'app-twitterfollowers'},{'name': 'TwitterrealfollowersComponent', 'selector': 'app-twitterrealfollowers'},{'name': 'TwittertimelineComponent', 'selector': 'app-twittertimeline'},{'name': 'WatchersComponent', 'selector': 'app-watchers'},{'name': 'WordcloudComponent', 'selector': 'app-wordcloud'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MentionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MentionsService.html":{"url":"injectables/MentionsService.html","title":"injectable - MentionsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MentionsService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/stack/mentions.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                            \n                                    Public\n                                _getFavorites\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/stack/mentions.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/stack/mentions.service.ts:9\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _getFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _getFavorites(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/stack/mentions.service.ts:14\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable()\nexport class MentionsService {\n\n  constructor(protected http: HttpClient) { }\n\n  public _get(id: string) {\n    return this.http.get(\"/getstackusermensions/\".concat(id))\n      .map(mentions => mentions);\n  }\n\n  public _getFavorites(id: string) {\n    return this.http.get(\"/getstackuserfavorites/\".concat(id))\n      .map(fav => fav);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationsComponent.html":{"url":"components/OrganizationsComponent.html","title":"component - OrganizationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrganizationsComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/github/organizations/organizations.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            OrganizationsService\n                \n            \n\n\n            \n                selector\n                app-organizations\n            \n\n            \n                styleUrls\n                organizations.component.css\n            \n\n\n\n            \n                templateUrl\n                ./organizations.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                organizations_count\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationsService: OrganizationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/github/organizations/organizations.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    organizationsService\n                                                  \n                                                        \n                                                                    OrganizationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        username\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/github/organizations/organizations.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/github/organizations/organizations.component.ts:24\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/github/organizations/organizations.component.ts:20\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizations_count\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizations_count:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/github/organizations/organizations.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {OrganizationsService} from \"../../../services/github/organizations.service\";\n\n@Component({\n  selector: 'app-organizations',\n  templateUrl: './organizations.component.html',\n  styleUrls: ['./organizations.component.css'],\n  providers: [OrganizationsService]\n\n})\nexport class OrganizationsComponent implements OnInit {\n\n  @Input() username: string;\n  organizations_count: number;\n\n  constructor(protected organizationsService: OrganizationsService) {\n    this.organizations_count = 0;\n  }\n\n  ngOnInit() {\n    this._get();\n  }\n\n  public _get() {\n    this.organizationsService._get(this.username).subscribe(orgs => {\n      this.organizations_count = orgs;\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    Organizations\n  \n  \n    \n      No of Public Organizations\n    \n  \n  \n    This user is involved in {{organizations_count}} Public Organizations.\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Organizations              No of Public Organizations            This user is involved in {{organizations_count}} Public Organizations.  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'CommitsComponent', 'selector': 'app-commits'},{'name': 'ContributionschartComponent', 'selector': 'app-contributionschart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForksComponent', 'selector': 'app-forks'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'HowtoComponent', 'selector': 'app-howto'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'MentionsComponent', 'selector': 'app-mentions'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PreloaderComponent', 'selector': 'app-preloader'},{'name': 'ReputationComponent', 'selector': 'app-reputation'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StackerrorComponent', 'selector': 'app-stackerror'},{'name': 'StackoverflowComponent', 'selector': 'app-stackoverflow'},{'name': 'StarcountComponent', 'selector': 'app-starcount'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TempComponent', 'selector': 'ng4-twitter-timeline'},{'name': 'ToptagsComponent', 'selector': 'app-toptags'},{'name': 'TwitterComponent', 'selector': 'app-twitter'},{'name': 'TwitterdashboardComponent', 'selector': 'app-twitterdashboard'},{'name': 'TwitterfollowersComponent', 'selector': 'app-twitterfollowers'},{'name': 'TwitterrealfollowersComponent', 'selector': 'app-twitterrealfollowers'},{'name': 'TwittertimelineComponent', 'selector': 'app-twittertimeline'},{'name': 'WatchersComponent', 'selector': 'app-watchers'},{'name': 'WordcloudComponent', 'selector': 'app-wordcloud'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationsService.html":{"url":"injectables/OrganizationsService.html","title":"injectable - OrganizationsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  OrganizationsService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/github/organizations.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/github/organizations.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get(username: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/github/organizations.service.ts:9\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable()\nexport class OrganizationsService {\n\n  constructor(protected http: HttpClient) { }\n\n  public _get(username: string) {\n    return this.http.get(\"/getorganizations/\".concat(username))\n      .map(orgs => orgs);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PreloaderComponent.html":{"url":"components/PreloaderComponent.html","title":"component - PreloaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PreloaderComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/preloader/preloader.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-preloader\n            \n\n            \n                styleUrls\n                preloader.component.css\n            \n\n\n\n            \n                templateUrl\n                ./preloader.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/preloader/preloader.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/preloader/preloader.component.ts:12\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-preloader',\n  templateUrl: './preloader.component.html',\n  styleUrls: ['./preloader.component.css']\n})\nexport class PreloaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n  \n    \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'CommitsComponent', 'selector': 'app-commits'},{'name': 'ContributionschartComponent', 'selector': 'app-contributionschart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForksComponent', 'selector': 'app-forks'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'HowtoComponent', 'selector': 'app-howto'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'MentionsComponent', 'selector': 'app-mentions'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PreloaderComponent', 'selector': 'app-preloader'},{'name': 'ReputationComponent', 'selector': 'app-reputation'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StackerrorComponent', 'selector': 'app-stackerror'},{'name': 'StackoverflowComponent', 'selector': 'app-stackoverflow'},{'name': 'StarcountComponent', 'selector': 'app-starcount'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TempComponent', 'selector': 'ng4-twitter-timeline'},{'name': 'ToptagsComponent', 'selector': 'app-toptags'},{'name': 'TwitterComponent', 'selector': 'app-twitter'},{'name': 'TwitterdashboardComponent', 'selector': 'app-twitterdashboard'},{'name': 'TwitterfollowersComponent', 'selector': 'app-twitterfollowers'},{'name': 'TwitterrealfollowersComponent', 'selector': 'app-twitterrealfollowers'},{'name': 'TwittertimelineComponent', 'selector': 'app-twittertimeline'},{'name': 'WatchersComponent', 'selector': 'app-watchers'},{'name': 'WordcloudComponent', 'selector': 'app-wordcloud'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PreloaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Repo.html":{"url":"classes/Repo.html","title":"class - Repo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Repo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/models/repo.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Repo {\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReputationService.html":{"url":"injectables/ReputationService.html","title":"injectable - ReputationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ReputationService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/stack/reputation.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/stack/reputation.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/stack/reputation.service.ts:9\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable()\nexport class ReputationService {\n\n  constructor(protected http: HttpClient) { }\n\n  public _get(id: string) {\n    return this.http.get(\"/getstackuserreputation/\".concat(id))\n      .map(reputation => reputation.items)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/search/search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                search.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/search/search.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:12\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \nfilter_tilt_shiftDEVSTATS - A Developer Profile Analyzer\n    menu\n    \n      \n        personGithub\n      \n        live_helpHelp\n      \n        gestureAbout\n    \n    \n      Github\n      Help\n    \n  \n  \n    \n      Stack Overflow\n      Github\n      Twitter\n    \n  \n\n\n\n\n  \n    Title\n    A bunch of text\n  \n\n\n\n  $('.tap-target').tapTarget('open');\n  $('.tap-target').tapTarget('close');\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      filter_tilt_shiftDEVSTATS - A Developer Profile Analyzer    menu                  personGithub              live_helpHelp              gestureAbout              Github      Help                  Stack Overflow      Github      Twitter            Title    A bunch of text    $(\\'.tap-target\\').tapTarget(\\'open\\');  $(\\'.tap-target\\').tapTarget(\\'close\\');'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'CommitsComponent', 'selector': 'app-commits'},{'name': 'ContributionschartComponent', 'selector': 'app-contributionschart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForksComponent', 'selector': 'app-forks'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'HowtoComponent', 'selector': 'app-howto'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'MentionsComponent', 'selector': 'app-mentions'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PreloaderComponent', 'selector': 'app-preloader'},{'name': 'ReputationComponent', 'selector': 'app-reputation'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StackerrorComponent', 'selector': 'app-stackerror'},{'name': 'StackoverflowComponent', 'selector': 'app-stackoverflow'},{'name': 'StarcountComponent', 'selector': 'app-starcount'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TempComponent', 'selector': 'ng4-twitter-timeline'},{'name': 'ToptagsComponent', 'selector': 'app-toptags'},{'name': 'TwitterComponent', 'selector': 'app-twitter'},{'name': 'TwitterdashboardComponent', 'selector': 'app-twitterdashboard'},{'name': 'TwitterfollowersComponent', 'selector': 'app-twitterfollowers'},{'name': 'TwitterrealfollowersComponent', 'selector': 'app-twitterrealfollowers'},{'name': 'TwittertimelineComponent', 'selector': 'app-twittertimeline'},{'name': 'WatchersComponent', 'selector': 'app-watchers'},{'name': 'WordcloudComponent', 'selector': 'app-wordcloud'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   "},"components/StackerrorComponent.html":{"url":"components/StackerrorComponent.html","title":"component - StackerrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StackerrorComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/stackoverflow/stackerror/stackerror.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stackerror\n            \n\n            \n                styleUrls\n                stackerror.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stackerror.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalActions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/stackoverflow/stackerror/stackerror.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/stackoverflow/stackerror/stackerror.component.ts:21\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/stackoverflow/stackerror/stackerror.component.ts:15\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/stackoverflow/stackerror/stackerror.component.ts:17\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/stackoverflow/stackerror/stackerror.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, OnInit} from '@angular/core';\nimport {MaterializeAction} from \"angular2-materialize\";\n\n@Component({\n  selector: 'app-stackerror',\n  templateUrl: './stackerror.component.html',\n  styleUrls: ['./stackerror.component.css']\n})\nexport class StackerrorComponent implements OnInit {\n\n  modalActions = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  openModal(){\n    this.modalActions.emit({action:\"modal\",params:['open']});\n  }\n\n  closeModal() {\n    this.modalActions.emit({action:\"modal\",params:['close']});\n  }\n}\n\n    \n\n    \n        \n\n  \n    help  ERROR!\n    You have entered an invalid Stackoverflow User ID. Stackoverflow ID's can be identified via the users profile URL.\n    \n    For an example,\n    \n    https://stackoverflow.com/users/7870026/dasun-pubudumal suggests that the users' user ID is 7870026.\n  \n  \n    Okay\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      help  ERROR!    You have entered an invalid Stackoverflow User ID. Stackoverflow ID\\'s can be identified via the users profile URL.        For an example,        https://stackoverflow.com/users/7870026/dasun-pubudumal suggests that the users\\' user ID is 7870026.        Okay  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'CommitsComponent', 'selector': 'app-commits'},{'name': 'ContributionschartComponent', 'selector': 'app-contributionschart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForksComponent', 'selector': 'app-forks'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'HowtoComponent', 'selector': 'app-howto'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'MentionsComponent', 'selector': 'app-mentions'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PreloaderComponent', 'selector': 'app-preloader'},{'name': 'ReputationComponent', 'selector': 'app-reputation'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StackerrorComponent', 'selector': 'app-stackerror'},{'name': 'StackoverflowComponent', 'selector': 'app-stackoverflow'},{'name': 'StarcountComponent', 'selector': 'app-starcount'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TempComponent', 'selector': 'ng4-twitter-timeline'},{'name': 'ToptagsComponent', 'selector': 'app-toptags'},{'name': 'TwitterComponent', 'selector': 'app-twitter'},{'name': 'TwitterdashboardComponent', 'selector': 'app-twitterdashboard'},{'name': 'TwitterfollowersComponent', 'selector': 'app-twitterfollowers'},{'name': 'TwitterrealfollowersComponent', 'selector': 'app-twitterrealfollowers'},{'name': 'TwittertimelineComponent', 'selector': 'app-twittertimeline'},{'name': 'WatchersComponent', 'selector': 'app-watchers'},{'name': 'WordcloudComponent', 'selector': 'app-wordcloud'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StackerrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StarcountComponent.html":{"url":"components/StarcountComponent.html","title":"component - StarcountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StarcountComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/github/starcount/starcount.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            StarsService\n                \n            \n\n\n            \n                selector\n                app-starcount\n            \n\n            \n                styleUrls\n                starcount.component.css\n            \n\n\n\n            \n                templateUrl\n                ./starcount.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                chartData\n                            \n                            \n                                chartLabels\n                            \n                            \n                                    Protected\n                                chartOptions\n                            \n                            \n                                hasData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(stars: StarsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/github/starcount/starcount.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    stars\n                                                  \n                                                        \n                                                                    StarsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        username\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/github/starcount/starcount.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/github/starcount/starcount.component.ts:52\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/github/starcount/starcount.component.ts:48\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chart:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/github/starcount/starcount.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartData:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/github/starcount/starcount.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartLabels:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/github/starcount/starcount.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            chartOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    responsive: true,\n    maintainAspectRatio: true,\n    title: {\n      display: true,\n      text: 'Stars per Language (Top 30)'\n    },\n    legend: {\n      labels: {\n        fontColor: 'black',\n        fontSize: 9\n      },\n      position: 'left'\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/github/starcount/starcount.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasData:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/github/starcount/starcount.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {StarsService} from \"../../../services/github/stars.service\";\n\n@Component({\n  selector: 'app-starcount',\n  templateUrl: './starcount.component.html',\n  styleUrls: ['./starcount.component.css'],\n  providers: [StarsService]\n})\nexport class StarcountComponent implements OnInit {\n\n  @Input() username: string;\n  chartData: any[];\n  chartLabels: any[];\n  chart: any[];\n  hasData: boolean;\n\n  protected chartOptions = {\n    responsive: true,\n    maintainAspectRatio: true,\n    title: {\n      display: true,\n      text: 'Stars per Language (Top 30)'\n    },\n    legend: {\n      labels: {\n        fontColor: 'black',\n        fontSize: 9\n      },\n      position: 'left'\n    }\n  };\n\n\n  constructor(protected stars: StarsService) {\n    this.chart = [{data: [], label: []}];\n    this.chartData = [];\n    this.chartLabels = [];\n    this.hasData = true;\n\n    this.stars._get(\"dasunpubudumal\").subscribe(stars => {\n      this.chartData = stars[1];\n      this.chartLabels = stars[0];\n      this.chart[0] = {data: [], label: []}\n    });\n  }\n\n  ngOnInit() {\n    this._get();\n  }\n\n  public _get() {\n    this.stars._get(this.username).subscribe(stars => {\n      this.chartData = stars[1];\n      this.chartLabels = stars[0];\n      if(stars[1].length != 0) {\n        this.hasData = true;\n        this.chart[0] = {data: stars[1], label: stars[0]}}\n      else {this.hasData = false;}\n\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'CommitsComponent', 'selector': 'app-commits'},{'name': 'ContributionschartComponent', 'selector': 'app-contributionschart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForksComponent', 'selector': 'app-forks'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'HowtoComponent', 'selector': 'app-howto'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'MentionsComponent', 'selector': 'app-mentions'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PreloaderComponent', 'selector': 'app-preloader'},{'name': 'ReputationComponent', 'selector': 'app-reputation'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StackerrorComponent', 'selector': 'app-stackerror'},{'name': 'StackoverflowComponent', 'selector': 'app-stackoverflow'},{'name': 'StarcountComponent', 'selector': 'app-starcount'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TempComponent', 'selector': 'ng4-twitter-timeline'},{'name': 'ToptagsComponent', 'selector': 'app-toptags'},{'name': 'TwitterComponent', 'selector': 'app-twitter'},{'name': 'TwitterdashboardComponent', 'selector': 'app-twitterdashboard'},{'name': 'TwitterfollowersComponent', 'selector': 'app-twitterfollowers'},{'name': 'TwitterrealfollowersComponent', 'selector': 'app-twitterrealfollowers'},{'name': 'TwittertimelineComponent', 'selector': 'app-twittertimeline'},{'name': 'WatchersComponent', 'selector': 'app-watchers'},{'name': 'WordcloudComponent', 'selector': 'app-wordcloud'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StarcountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StarsService.html":{"url":"injectables/StarsService.html","title":"injectable - StarsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StarsService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/github/stars.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/github/stars.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get(username: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/github/stars.service.ts:9\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable()\nexport class StarsService {\n\n  constructor(protected http: HttpClient) { }\n\n  public _get(username: string) {\n    return this.http.get(\"/getstarsperlang/\".concat(username))\n      .map(stars => stars);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagsService.html":{"url":"injectables/TagsService.html","title":"injectable - TagsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TagsService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/stack/tags.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/stack/tags.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/stack/tags.service.ts:9\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable()\nexport class TagsService {\n\n  constructor(protected http: HttpClient) { }\n\n  public _get(id: string) {\n    return this.http.get(\"/getstackusertags/\".concat(id))\n      .map(tags => tags);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToptagsService.html":{"url":"injectables/ToptagsService.html","title":"injectable - ToptagsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToptagsService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/stack/toptags.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/stack/toptags.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/stack/toptags.service.ts:10\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpClientModule} from \"@angular/common/http\";\n\n@Injectable()\nexport class ToptagsService {\n\n  constructor(protected http: HttpClient) { }\n\n  // End up with an array of badges.\n  public _get(id: string) {\n    return this.http.get(\"/getstackusertoptags/\".concat(id)).map(topTags => topTags.items);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TwitterService.html":{"url":"injectables/TwitterService.html","title":"injectable - TwitterService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TwitterService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/twitter/twitter.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/twitter/twitter.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get(handle: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/twitter/twitter.service.ts:10\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        handle\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {TwitterUser} from \"../../components/models/twitter-user\";\n\n@Injectable()\nexport class TwitterService {\n\n  constructor(protected http: HttpClient) { }\n\n  public _get(handle: string) {\n    return this.http.get(\"/gettwitteruser/\".concat(handle))\n      .map(res => res);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TwitterdashboardComponent.html":{"url":"components/TwitterdashboardComponent.html","title":"component - TwitterdashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TwitterdashboardComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/twitter/twitterdashboard/twitterdashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-twitterdashboard\n            \n\n            \n                styleUrls\n                twitterdashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./twitterdashboard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/twitter/twitterdashboard/twitterdashboard.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                    \n                            \n                            Type:    TwitterUser\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/twitter/twitterdashboard/twitterdashboard.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/twitter/twitterdashboard/twitterdashboard.component.ts:15\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {TwitterUser} from \"../../models/twitter-user\";\n\n@Component({\n  selector: 'app-twitterdashboard',\n  templateUrl: './twitterdashboard.component.html',\n  styleUrls: ['./twitterdashboard.component.css']\n})\nexport class TwitterdashboardComponent implements OnInit {\n\n  @Input() user: TwitterUser;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n   0\">\n    \n      \n        \n          \n            favorite\n          \n          \n            Followers\n            \n            \t{{user.followersCount}}\n            \n          \n        \n      \n    \n  \n   0\">\n    \n      \n        \n          \n            favorite_border\n          \n          \n            Statuses\n            {{user.statusesCount}}\n          \n        \n      \n    \n  \n   0\">\n    \n      \n        \n          \n            insert_emoticon\n          \n          \n            Friends\n            {{user.friendsCount}}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   0\">                                        favorite                                Followers                        \t{{user.followersCount}}                                             0\">                                        favorite_border                                Statuses            {{user.statusesCount}}                                 0\">                                        insert_emoticon                                Friends            {{user.friendsCount}}                              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'CommitsComponent', 'selector': 'app-commits'},{'name': 'ContributionschartComponent', 'selector': 'app-contributionschart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForksComponent', 'selector': 'app-forks'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'HowtoComponent', 'selector': 'app-howto'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'MentionsComponent', 'selector': 'app-mentions'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PreloaderComponent', 'selector': 'app-preloader'},{'name': 'ReputationComponent', 'selector': 'app-reputation'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StackerrorComponent', 'selector': 'app-stackerror'},{'name': 'StackoverflowComponent', 'selector': 'app-stackoverflow'},{'name': 'StarcountComponent', 'selector': 'app-starcount'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TempComponent', 'selector': 'ng4-twitter-timeline'},{'name': 'ToptagsComponent', 'selector': 'app-toptags'},{'name': 'TwitterComponent', 'selector': 'app-twitter'},{'name': 'TwitterdashboardComponent', 'selector': 'app-twitterdashboard'},{'name': 'TwitterfollowersComponent', 'selector': 'app-twitterfollowers'},{'name': 'TwitterrealfollowersComponent', 'selector': 'app-twitterrealfollowers'},{'name': 'TwittertimelineComponent', 'selector': 'app-twittertimeline'},{'name': 'WatchersComponent', 'selector': 'app-watchers'},{'name': 'WordcloudComponent', 'selector': 'app-wordcloud'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TwitterdashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TwitterfollowersComponent.html":{"url":"components/TwitterfollowersComponent.html","title":"component - TwitterfollowersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TwitterfollowersComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/twitter/twitterfollowers/twitterfollowers.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            TwitterfollowersService\n                \n            \n\n\n            \n                selector\n                app-twitterfollowers\n            \n\n            \n                styleUrls\n                twitterfollowers.component.css\n            \n\n\n\n            \n                templateUrl\n                ./twitterfollowers.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                followers\n                            \n                            \n                                handler\n                            \n                            \n                                isDataLoaded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(followersService: TwitterfollowersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/twitter/twitterfollowers/twitterfollowers.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    followersService\n                                                  \n                                                        \n                                                                    TwitterfollowersService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        handle\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/twitter/twitterfollowers/twitterfollowers.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/twitter/twitterfollowers/twitterfollowers.component.ts:31\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/twitter/twitterfollowers/twitterfollowers.component.ts:23\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            followers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        followers:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/twitter/twitterfollowers/twitterfollowers.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        handler:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/twitter/twitterfollowers/twitterfollowers.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDataLoaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDataLoaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/twitter/twitterfollowers/twitterfollowers.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {TwitterfollowersService} from \"../../../services/twitter/twitterfollowers.service\";\nimport {TwitterUser} from \"../../models/twitter-user\";\n\n@Component({\n  selector: 'app-twitterfollowers',\n  templateUrl: './twitterfollowers.component.html',\n  styleUrls: ['./twitterfollowers.component.css'],\n  providers: [TwitterfollowersService]\n})\nexport class TwitterfollowersComponent implements OnInit {\n\n  @Input() handle : string;\n  handler: string;\n  followers: any;\n  isDataLoaded: boolean;\n\n  constructor(protected followersService: TwitterfollowersService) {\n    this.handle = \"katyperry\";\n    this.isDataLoaded = false;\n  }\n\n  ngOnInit() {\n    this.followersService._get(\"katyperry\").subscribe((followers) => {\n      console.log(followers);\n      this.followers = followers.users;\n      this.isDataLoaded = true;\n    })\n  }\n\n  public _get() {\n    console.log(this.handle);\n    this.isDataLoaded = false;\n    this.followersService._get(this.handle).subscribe((followers) => {\n      console.log(followers);\n      this.followers = followers.users;\n      this.isDataLoaded = true;\n    })\n  }\n\n\n}\n\n    \n\n    \n        \n\nFriends\n\n  \n    \n    {{follower.name}}({{follower.screen_name}})\n    {{follower.location}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Friends          {{follower.name}}({{follower.screen_name}})    {{follower.location}}  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'CommitsComponent', 'selector': 'app-commits'},{'name': 'ContributionschartComponent', 'selector': 'app-contributionschart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForksComponent', 'selector': 'app-forks'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'HowtoComponent', 'selector': 'app-howto'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'MentionsComponent', 'selector': 'app-mentions'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PreloaderComponent', 'selector': 'app-preloader'},{'name': 'ReputationComponent', 'selector': 'app-reputation'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StackerrorComponent', 'selector': 'app-stackerror'},{'name': 'StackoverflowComponent', 'selector': 'app-stackoverflow'},{'name': 'StarcountComponent', 'selector': 'app-starcount'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TempComponent', 'selector': 'ng4-twitter-timeline'},{'name': 'ToptagsComponent', 'selector': 'app-toptags'},{'name': 'TwitterComponent', 'selector': 'app-twitter'},{'name': 'TwitterdashboardComponent', 'selector': 'app-twitterdashboard'},{'name': 'TwitterfollowersComponent', 'selector': 'app-twitterfollowers'},{'name': 'TwitterrealfollowersComponent', 'selector': 'app-twitterrealfollowers'},{'name': 'TwittertimelineComponent', 'selector': 'app-twittertimeline'},{'name': 'WatchersComponent', 'selector': 'app-watchers'},{'name': 'WordcloudComponent', 'selector': 'app-wordcloud'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TwitterfollowersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TwitterfollowersService.html":{"url":"injectables/TwitterfollowersService.html","title":"injectable - TwitterfollowersService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TwitterfollowersService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/twitter/twitterfollowers.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/twitter/twitterfollowers.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get(handle: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/twitter/twitterfollowers.service.ts:10\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        handle\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {TwitterUser} from \"../../components/models/twitter-user\";\n\n@Injectable()\nexport class TwitterfollowersService {\n\n  constructor(protected http: HttpClient) { }\n\n  public _get(handle: string) {\n    return this.http.get(\"/gettwitterfriends/\".concat(handle))\n      .map(res => res);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TwitterrealService.html":{"url":"injectables/TwitterrealService.html","title":"injectable - TwitterrealService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TwitterrealService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/twitter/twitterreal.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/twitter/twitterreal.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get(handle: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/twitter/twitterreal.service.ts:9\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        handle\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable()\nexport class TwitterrealService {\n\n  constructor(protected http: HttpClient) { }\n\n  public _get(handle: string) {\n    return this.http.get(\"/gettwitterfollowers/\".concat(handle))\n      .map(res => res);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TwitterrealfollowersComponent.html":{"url":"components/TwitterrealfollowersComponent.html","title":"component - TwitterrealfollowersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TwitterrealfollowersComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/twitter/twitterrealfollowers/twitterrealfollowers.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            TwitterrealService\n                \n            \n\n\n            \n                selector\n                app-twitterrealfollowers\n            \n\n            \n                styleUrls\n                twitterrealfollowers.component.css\n            \n\n\n\n            \n                templateUrl\n                ./twitterrealfollowers.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                followers\n                            \n                            \n                                isDataRetrieved\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(realFollowers: TwitterrealService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/twitter/twitterrealfollowers/twitterrealfollowers.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    realFollowers\n                                                  \n                                                        \n                                                                    TwitterrealService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        handle\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/twitter/twitterrealfollowers/twitterrealfollowers.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/twitter/twitterrealfollowers/twitterrealfollowers.component.ts:31\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/twitter/twitterrealfollowers/twitterrealfollowers.component.ts:21\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            followers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        followers:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/twitter/twitterrealfollowers/twitterrealfollowers.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDataRetrieved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDataRetrieved:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/twitter/twitterrealfollowers/twitterrealfollowers.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {TwitterrealService} from \"../../../services/twitter/twitterreal.service\";\n\n@Component({\n  selector: 'app-twitterrealfollowers',\n  templateUrl: './twitterrealfollowers.component.html',\n  styleUrls: ['./twitterrealfollowers.component.css'],\n  providers: [TwitterrealService]\n})\nexport class TwitterrealfollowersComponent implements OnInit {\n\n  @Input() handle: string;\n  followers: any;\n  isDataRetrieved: boolean;\n\n  constructor(protected realFollowers: TwitterrealService) {\n    this.handle = \"katyperry\";\n    this.isDataRetrieved = false;\n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.realFollowers._get(\"katyperry\").subscribe((followers) => {\n        console.log(followers.users);\n        this.followers = followers.users;\n        this.isDataRetrieved = true;\n      });\n    }, 2000);\n  }\n\n  public _get() {\n    this.isDataRetrieved = false;\n    this.realFollowers._get(this.handle).subscribe((followers) => {\n      this.followers = followers.users;\n      this.isDataRetrieved = true;\n    });\n  }\n}\n\n    \n\n    \n        \n\nFollowers\n\n  \n    \n    {{follower.name}}({{follower.screen_name}})\n    {{follower.location}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Followers          {{follower.name}}({{follower.screen_name}})    {{follower.location}}  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'CommitsComponent', 'selector': 'app-commits'},{'name': 'ContributionschartComponent', 'selector': 'app-contributionschart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForksComponent', 'selector': 'app-forks'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'HowtoComponent', 'selector': 'app-howto'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'MentionsComponent', 'selector': 'app-mentions'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PreloaderComponent', 'selector': 'app-preloader'},{'name': 'ReputationComponent', 'selector': 'app-reputation'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StackerrorComponent', 'selector': 'app-stackerror'},{'name': 'StackoverflowComponent', 'selector': 'app-stackoverflow'},{'name': 'StarcountComponent', 'selector': 'app-starcount'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TempComponent', 'selector': 'ng4-twitter-timeline'},{'name': 'ToptagsComponent', 'selector': 'app-toptags'},{'name': 'TwitterComponent', 'selector': 'app-twitter'},{'name': 'TwitterdashboardComponent', 'selector': 'app-twitterdashboard'},{'name': 'TwitterfollowersComponent', 'selector': 'app-twitterfollowers'},{'name': 'TwitterrealfollowersComponent', 'selector': 'app-twitterrealfollowers'},{'name': 'TwittertimelineComponent', 'selector': 'app-twittertimeline'},{'name': 'WatchersComponent', 'selector': 'app-watchers'},{'name': 'WordcloudComponent', 'selector': 'app-wordcloud'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TwitterrealfollowersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/stack/user.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                            \n                                    Public\n                                _getQuestions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/stack/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/stack/user.service.ts:10\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _getQuestions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _getQuestions(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/stack/user.service.ts:15\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Stackuser} from \"../../components/models/stackuser\";\n\n@Injectable()\nexport class UserService {\n\n  constructor(protected http: HttpClient) { }\n\n  public _get(id: string) {\n    return this.http.get(\"/getstackuser/\".concat(id))\n      .map(user => user);\n  }\n\n  public _getQuestions(id: string) {\n    return this.http.get(\"/getstackuserquestionscount/\".concat(id))\n      .map(questions => questions);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WatchersComponent.html":{"url":"components/WatchersComponent.html","title":"component - WatchersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WatchersComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/github/watchers/watchers.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            WatchersService\n                \n            \n\n\n            \n                selector\n                app-watchers\n            \n\n            \n                styleUrls\n                watchers.component.css\n            \n\n\n\n            \n                templateUrl\n                ./watchers.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                watchers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(watcherService: WatchersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/github/watchers/watchers.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    watcherService\n                                                  \n                                                        \n                                                                    WatchersService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        username\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/github/watchers/watchers.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/github/watchers/watchers.component.ts:24\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/github/watchers/watchers.component.ts:20\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            watchers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        watchers:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/github/watchers/watchers.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {WatchersService} from \"../../../services/github/watchers.service\";\n\n@Component({\n  selector: 'app-watchers',\n  templateUrl: './watchers.component.html',\n  styleUrls: ['./watchers.component.css'],\n  providers: [WatchersService]\n})\nexport class WatchersComponent implements OnInit {\n\n  @Input() username: string;\n  watchers: number;\n\n\n  constructor(protected watcherService: WatchersService) {\n    this.watchers = 0;\n  }\n\n  ngOnInit() {\n    this._get();\n  }\n\n  public _get() {\n    this.watcherService._get(this.username).subscribe(watchers => {\n      this.watchers = watchers;\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    Watchers\n  \n  \n    \n      No of Watchers\n    \n  \n  \n    This user has {{watchers}} watchers\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Watchers              No of Watchers            This user has {{watchers}} watchers  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'CommitsComponent', 'selector': 'app-commits'},{'name': 'ContributionschartComponent', 'selector': 'app-contributionschart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForksComponent', 'selector': 'app-forks'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'HowtoComponent', 'selector': 'app-howto'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'MentionsComponent', 'selector': 'app-mentions'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PreloaderComponent', 'selector': 'app-preloader'},{'name': 'ReputationComponent', 'selector': 'app-reputation'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StackerrorComponent', 'selector': 'app-stackerror'},{'name': 'StackoverflowComponent', 'selector': 'app-stackoverflow'},{'name': 'StarcountComponent', 'selector': 'app-starcount'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TempComponent', 'selector': 'ng4-twitter-timeline'},{'name': 'ToptagsComponent', 'selector': 'app-toptags'},{'name': 'TwitterComponent', 'selector': 'app-twitter'},{'name': 'TwitterdashboardComponent', 'selector': 'app-twitterdashboard'},{'name': 'TwitterfollowersComponent', 'selector': 'app-twitterfollowers'},{'name': 'TwitterrealfollowersComponent', 'selector': 'app-twitterrealfollowers'},{'name': 'TwittertimelineComponent', 'selector': 'app-twittertimeline'},{'name': 'WatchersComponent', 'selector': 'app-watchers'},{'name': 'WordcloudComponent', 'selector': 'app-wordcloud'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WatchersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WatchersService.html":{"url":"injectables/WatchersService.html","title":"injectable - WatchersService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WatchersService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/github/watchers.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/github/watchers.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _get(username: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/github/watchers.service.ts:9\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable()\nexport class WatchersService {\n\n  constructor(protected http: HttpClient) { }\n\n  public _get(username: string) {\n    return this.http.get(\"/getwatchers/\".concat(username))\n      .map(watchers => watchers);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^5.0.0\n        \n            @angular/common : ^5.0.0\n        \n            @angular/compiler : ^5.0.0\n        \n            @angular/core : ^5.0.0\n        \n            @angular/forms : ^5.0.0\n        \n            @angular/http : ^5.0.0\n        \n            @angular/platform-browser : ^5.0.0\n        \n            @angular/platform-browser-dynamic : ^5.0.0\n        \n            @angular/router : ^5.0.0\n        \n            @angular/service-worker : ^5.2.4\n        \n            angular-async-local-storage : ^3.1.1\n        \n            angular-autofocus-fix : ^0.1.0\n        \n            angular2-materialize : ^15.1.10\n        \n            angular2-nvd3 : ^1.0.7\n        \n            angular4-word-cloud : ^1.0.4\n        \n            chart.js : ^2.7.1\n        \n            core-js : ^2.4.1\n        \n            d3 : ^4.13.0\n        \n            github-calendar : ^1.2.1\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^2.2.4\n        \n            materialize-css : ^0.100.2\n        \n            materialize-social : ^1.0.3\n        \n            ng2-charts : ^1.6.0\n        \n            ng4-loading-spinner : ^1.1.1\n        \n            rxjs : ^5.5.2\n        \n            zone.js : ^0.8.14\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nClient\nThis project was generated with Angular CLI version 1.5.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_AppComponent_providers\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGithubComponent\n\nGithubComponent\n\nAppModule -->\n\nGithubComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nChartComponent\n\nChartComponent\n\nAppModule -->\n\nChartComponent->AppModule\n\n\n\n\n\nStackoverflowComponent\n\nStackoverflowComponent\n\nAppModule -->\n\nStackoverflowComponent->AppModule\n\n\n\n\n\nTwitterComponent\n\nTwitterComponent\n\nAppModule -->\n\nTwitterComponent->AppModule\n\n\n\n\n\nAboutComponent\n\nAboutComponent\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nHowtoComponent\n\nHowtoComponent\n\nAppModule -->\n\nHowtoComponent->AppModule\n\n\n\n\n\nCommitsComponent\n\nCommitsComponent\n\nAppModule -->\n\nCommitsComponent->AppModule\n\n\n\n\n\nPreloaderComponent\n\nPreloaderComponent\n\nAppModule -->\n\nPreloaderComponent->AppModule\n\n\n\n\n\nContributionschartComponent\n\nContributionschartComponent\n\nAppModule -->\n\nContributionschartComponent->AppModule\n\n\n\n\n\nStarcountComponent\n\nStarcountComponent\n\nAppModule -->\n\nStarcountComponent->AppModule\n\n\n\n\n\nForksComponent\n\nForksComponent\n\nAppModule -->\n\nForksComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nWatchersComponent\n\nWatchersComponent\n\nAppModule -->\n\nWatchersComponent->AppModule\n\n\n\n\n\nIssuesComponent\n\nIssuesComponent\n\nAppModule -->\n\nIssuesComponent->AppModule\n\n\n\n\n\nOrganizationsComponent\n\nOrganizationsComponent\n\nAppModule -->\n\nOrganizationsComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nTagsComponent\n\nTagsComponent\n\nAppModule -->\n\nTagsComponent->AppModule\n\n\n\n\n\nMentionsComponent\n\nMentionsComponent\n\nAppModule -->\n\nMentionsComponent->AppModule\n\n\n\n\n\nWordcloudComponent\n\nWordcloudComponent\n\nAppModule -->\n\nWordcloudComponent->AppModule\n\n\n\n\n\nToptagsComponent\n\nToptagsComponent\n\nAppModule -->\n\nToptagsComponent->AppModule\n\n\n\n\n\nCapitalizeFirstPipe\n\nCapitalizeFirstPipe\n\nAppModule -->\n\nCapitalizeFirstPipe->AppModule\n\n\n\n\n\nReputationComponent\n\nReputationComponent\n\nAppModule -->\n\nReputationComponent->AppModule\n\n\n\n\n\nStackerrorComponent\n\nStackerrorComponent\n\nAppModule -->\n\nStackerrorComponent->AppModule\n\n\n\n\n\nTwitterdashboardComponent\n\nTwitterdashboardComponent\n\nAppModule -->\n\nTwitterdashboardComponent->AppModule\n\n\n\n\n\nTwittertimelineComponent\n\nTwittertimelineComponent\n\nAppModule -->\n\nTwittertimelineComponent->AppModule\n\n\n\n\n\nTwitterfollowersComponent\n\nTwitterfollowersComponent\n\nAppModule -->\n\nTwitterfollowersComponent->AppModule\n\n\n\n\n\nTwitterrealfollowersComponent\n\nTwitterrealfollowersComponent\n\nAppModule -->\n\nTwitterrealfollowersComponent->AppModule\n\n\n\n\n\nTempComponent\n\nTempComponent\n\nAppModule -->\n\nTempComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nHttpClient\n\nHttpClient\n\nAppComponent -->\n\nHttpClient->AppComponent\n\n\n\n\n\nGithubService\n\nGithubService\n\nAppModule -->\n\nGithubService->AppModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        30 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        18 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 classes\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appRoutes   (src/.../app.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appRoutes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        appRoutes:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: 'github',\n    component: GithubComponent,\n    data: {shouldDetach: true}\n  },\n  {\n    path: '',\n    component: StackoverflowComponent,\n    data: {shouldDetach: true}\n  },\n  {\n    path: 'twitter',\n    component: TwitterComponent,\n    data: {shouldDetach: false}\n  },\n  {\n    path: 'about',\n    component: AboutComponent\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
